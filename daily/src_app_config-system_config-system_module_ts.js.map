{"version":3,"file":"src_app_config-system_config-system_module_ts.js","mappings":"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","names":["ConfigSystemService","constructor","http","getAllConfiguration","this","get","environment","Defines","updateConfiguration","data","post","updateSystemSettingModelRequestList","refresh","i0","factory","ctx_r8","oxw","ctx_r14","ConfigListComponent","configSystemService","privilegesService","footprintService","FormGroup","ngOnInit","enableUpdate","checkPrivileges","PRIVILEGES","getData","subscribe","resp","systemConfigs","payload","systemSettingModelForApplicationHashMap","console","log","settArr","patchArr","k","map","item","code","FormControl","value","type","oldValue","JSON","parse","stringify","handleOldValue","systemConfigForm","patchValue","changeDetected","elem","itemKey","changedList","length","obj","find","fillList","push","applicationName","intValue","Number","submit","handleNewValue","selectors","ctx","routes","path","redirectTo","pathMatch","component","ConfigSystemLayoutComponent","ConfigSystemRoutingModule","RouterModule","ConfigSystemModule","CommonModule","SharedModule"],"sourceRoot":"webpack:///","sources":["./src/app/config-system/services/configSystem.service.ts","./src/app/config-system/components/config-list/config-list.component.html","./src/app/config-system/components/config-list/config-list.component.ts","./src/app/config-system/config-system-routing.module.ts","./src/app/config-system/layout/config-system-layout/config-system-layout.component.ts","./src/app/config-system/layout/config-system-layout/config-system-layout.component.html","./src/app/config-system/config-system.module.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ApiResponse } from 'src/app/shared/statics/apiResponse';\r\nimport { Defines } from 'src/app/shared/statics/defines';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Config } from '../models/config.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ConfigSystemService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllConfiguration() {\r\n    return this.http.get<ApiResponse<any>>(\r\n      environment.url +\r\n        Defines.SYSTEM_CONFIG_ENDPOINTS.CONFIG_SERVICE +\r\n        Defines.SYSTEM_CONFIG_ENDPOINTS.SYSTEM_SETTING +\r\n        Defines.CRUD.GET_ALL,\r\n      {}\r\n    );\r\n  }\r\n  updateConfiguration(data: Config[]) {\r\n    let body = {\r\n      updateSystemSettingModelRequestList: data,\r\n    };\r\n    return this.http.post<ApiResponse<any>>(\r\n      environment.url +\r\n        Defines.SYSTEM_CONFIG_ENDPOINTS.CONFIG_SERVICE +\r\n        Defines.SYSTEM_CONFIG_ENDPOINTS.SYSTEM_SETTING +\r\n        Defines.CRUD.UPDATE,\r\n      body\r\n    );\r\n  }\r\n  refresh() {\r\n    return this.http.post<ApiResponse<any>>(\r\n      environment.url +\r\n        Defines.SYSTEM_CONFIG_ENDPOINTS.CONFIG_SERVICE +\r\n        Defines.SYSTEM_CONFIG_ENDPOINTS.ACTUATOR +\r\n        Defines.SYSTEM_CONFIG_ENDPOINTS.REFRESH,\r\n      {}\r\n    );\r\n  }\r\n}\r\n","<form autocomplete=\"off\" [formGroup]=\"systemConfigForm\" (ngSubmit)=\"submit()\">\r\n  <div class=\"row mt-2 mb-3 flex justify-content-end\">\r\n    <button\r\n      *ngIf=\"enableUpdate\"\r\n      pButton\r\n      class=\"btn btn-basic mr-3\"\r\n      type=\"submit\"\r\n      label=\"Submit\"\r\n    ></button>\r\n  </div>\r\n  <!-- [multiple]=\"true\" -->\r\n  <p-accordion [multiple]=\"true\">\r\n    <p-accordionTab\r\n      *ngFor=\"let item of systemConfigs | keyvalue\"\r\n      header=\"{{ item.key.toLocaleUpperCase() }}\"\r\n    >\r\n      <div>\r\n        <div *ngFor=\"let elem of item.value\" class=\"inline-block\">\r\n          <span *ngIf=\"elem.type == 2\" class=\"p-float-label mt-4 mr-7\">\r\n            <input\r\n              id=\"{{ elem.label }}\"\r\n              style=\"width: 22vw\"\r\n              type=\"text\"\r\n              pInputText\r\n              maxlength=\"50\"\r\n              #input\r\n              formControlName=\"{{ elem.code }}\"\r\n              (input)=\"changeDetected(input.value, elem, item.key)\"\r\n            />\r\n            <label for=\"{{ elem.label }}\">{{ elem.description }} </label>\r\n          </span>\r\n          <span *ngIf=\"elem.type == 1\" class=\"check mt-4 mr-7\">\r\n            <p-checkbox\r\n              class=\"pr-2\"\r\n              [binary]=\"true\"\r\n              [trueValue]=\"1\"\r\n              [falseValue]=\"0\"\r\n              #check\r\n              (onChange)=\"changeDetected(check.model, elem, item.key)\"\r\n              formControlName=\"{{ elem.code }}\"\r\n            ></p-checkbox>\r\n            <label class=\"check-label\">{{ elem.description }} </label>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </p-accordionTab>\r\n    <!-- <p-accordionTab header=\"Header 2\"> Content 2 </p-accordionTab>\r\n    <p-accordionTab header=\"Header 3\"> Content 3 </p-accordionTab> -->\r\n  </p-accordion>\r\n</form>\r\n","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { FootprintService } from 'src/app/shared/services/footprint-service/footprint.service';\r\nimport { PrivilegesService } from 'src/app/shared/services/privileges-service/privileges.service';\r\nimport { PRIVILEGES } from 'src/app/shared/statics/privileges';\r\nimport { Config } from '../../models/config.model';\r\nimport { ConfigSystemService } from '../../services/configSystem.service';\r\n\r\n@Component({\r\n  selector: 'app-config-list',\r\n  templateUrl: './config-list.component.html',\r\n  styleUrls: ['./config-list.component.scss'],\r\n})\r\nexport class ConfigListComponent implements OnInit {\r\n  systemConfigForm: FormGroup = new FormGroup({});\r\n  systemConfigs!: any[];\r\n  changedList: Config[] = [];\r\n  enableUpdate!: boolean;\r\n  constructor(\r\n    private configSystemService: ConfigSystemService,\r\n    private privilegesService: PrivilegesService,\r\n    private footprintService: FootprintService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.enableUpdate = this.privilegesService.checkPrivileges(\r\n      PRIVILEGES.CONFIGRATION.UPDATE\r\n    );\r\n    this.getData();\r\n  }\r\n  getData() {\r\n    this.configSystemService.getAllConfiguration().subscribe((resp) => {\r\n      this.systemConfigs = resp.payload.systemSettingModelForApplicationHashMap;\r\n      console.log('Config System:', this.systemConfigs);\r\n      let settArr: any = {};\r\n      let patchArr: any = {};\r\n      for (const k in this.systemConfigs) {\r\n        this.systemConfigs[k].map((item: any) => {\r\n          let code = item.code;\r\n          settArr[code] = new FormControl(item.value, []);\r\n          item.type == 1\r\n            ? (patchArr[code] = +item.value)\r\n            : (patchArr[code] = item.value);\r\n        });\r\n      }\r\n      console.log(settArr);\r\n      console.log(patchArr);\r\n      let oldValue = JSON.parse(JSON.stringify(patchArr));\r\n      this.footprintService.handleOldValue(oldValue);\r\n      this.systemConfigForm = new FormGroup(settArr);\r\n      this.systemConfigForm.patchValue(patchArr);\r\n    });\r\n  }\r\n  changeDetected(value: any, elem: Config, itemKey: string) {\r\n    if (this.changedList.length) {\r\n      let obj = this.changedList.find((item) => {\r\n        return item.code == elem.code;\r\n      });\r\n      if (obj) {\r\n        obj.value = value;\r\n      } else {\r\n        this.fillList(elem, itemKey);\r\n      }\r\n    } else {\r\n      this.fillList(elem, itemKey);\r\n    }\r\n  }\r\n  fillList(elem: Config, itemKey: string) {\r\n    this.changedList.push({\r\n      code: elem.code,\r\n      value: elem.value,\r\n      applicationName: itemKey,\r\n    });\r\n  }\r\n  intValue(value: any) {\r\n    let val = Number(value);\r\n    return val ? true : false;\r\n  }\r\n  submit() {\r\n    console.log(this.systemConfigForm.value);\r\n    this.footprintService.handleNewValue(this.systemConfigForm.value);\r\n    this.configSystemService\r\n      .updateConfiguration(this.changedList)\r\n      .subscribe((resp) => {\r\n        console.log(resp);\r\n        this.configSystemService.refresh().subscribe();\r\n        this.getData();\r\n      });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ConfigSystemLayoutComponent } from './layout/config-system-layout/config-system-layout.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n  { path: 'list', component: ConfigSystemLayoutComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ConfigSystemRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-config-system-layout',\r\n  templateUrl: './config-system-layout.component.html',\r\n  styleUrls: ['./config-system-layout.component.scss']\r\n})\r\nexport class ConfigSystemLayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"services-container layout-margin\">\r\n  <div class=\"page-title\">\r\n    <span class=\"head-icon pi pi-cog\"></span>\r\n    <span class=\"text\">System Configuration </span>\r\n  </div>\r\n  <app-config-list></app-config-list>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ConfigListComponent } from './components/config-list/config-list.component';\r\nimport { ConfigSystemLayoutComponent } from './layout/config-system-layout/config-system-layout.component';\r\nimport { ConfigSystemRoutingModule } from './config-system-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ConfigListComponent,\r\n    ConfigSystemLayoutComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,SharedModule,ConfigSystemRoutingModule\r\n  ]\r\n})\r\nexport class ConfigSystemModule { }\r\n"]}
{"version":3,"file":"src_app_transfer-adjustment_transfer-adjustment_module_ts.js","mappings":"kNAWO,IAAMA,EAAb,MAAM,QAEJC,YAAoBC,eADpBC,aAAkBC,QAAkBC,wBAG7BC,kBACL,OAAOH,KAAKD,KAAKK,KACfJ,KAAKK,QACHH,iCACAA,iBACF,IAGGI,eAAeC,GACpB,IAAIC,EAA0B,GAC9B,QAASC,KAAYF,EACnBC,EAAiBE,KAAK,CACpBC,aAAcF,EAASE,aACvBC,SAAUH,EAASG,SACnBC,iBAAkBJ,EAASI,mBAG/B,OAAOb,KAAKD,KAAKK,KACfJ,KAAKK,QAAUH,iCAAuCA,gBAAmBY,iBAEpEN,IAIFO,oBAAoBR,GACzBS,QAAQC,IAAIV,GACZ,IAAIC,EAA0B,GAC9B,QAASC,KAAYF,EACnBC,EAAiBE,KAAK,CACpBC,aAAcF,EAASE,aACvBC,SAAUH,EAASG,SACnBC,iBAAkBJ,EAASI,mBAG/B,OAAOb,KAAKD,KAAKK,KACfJ,KAAKK,QACHH,iCACAA,sBACF,CACEgB,UAAW,IAAIV,KAIdW,kBAAkBC,GACvB,OAAOpB,KAAKD,KAAKK,KACfJ,KAAKK,QACHH,uCACAA,aACF,CAAEW,iBAAkBQ,SAASD,KAG1BE,uBACL,OAAOtB,KAAKD,KAAKK,KACfJ,KAAKK,QACHH,uCACAA,iBACF,IAGGqB,oBAAoBC,GACzB,OAAOxB,KAAKD,KAAKK,KACfJ,KAAKK,QACHH,uCACAA,gBAAmBY,iBAChBU,IAGFC,oBAAoBC,GACzB,OAAO1B,KAAKD,KAAKK,KACfJ,KAAKK,QACHH,uCACAA,aACFwB,GAGGC,mBAAmBd,GACxB,OAAOb,KAAKD,KACTK,KACCJ,KAAKK,QACHH,uCACAA,gBACF,CAAEW,mEArFGhB,GAAgB+B,wCAAhB/B,EAAgBgC,QAAhBhC,EAAgB,qBAFf,SAEDA,GAAb,kLCPA,MAAMiC,EAAiB,CACrB,CAAEC,KAAM,GAAIC,WAAY,aAAcC,UAAW,QACjD,CAAEF,KAAM,aAAcG,UCSxB,MAAM,QAuCJpC,YACUqC,EACAC,EACAC,EACAC,EACAC,GAJAvC,qBACAA,uBACAA,wBACAA,yBACAA,wBA1CVA,mBAAgB,IAAIwC,IACpBxC,aAAU,CACR,CAAEyC,QAAS,cAAeC,MAAO,wBAAyBC,WAAY,IACtE,CACEF,QAAS,OACTC,MAAO,gBACPC,WAAY,6BAIhB3C,eAAY,CACV,CACEyC,QAAS,SACTC,MAAO,kBACPE,WAAY,UACZC,MAAM,EACNC,KAAM,GACNC,YAAa,UACbC,KAAM,QACNC,UAAW,UAEb,CACER,QAAS,WACTC,MAAO,SACPE,WAAY,YACZC,MAAM,EACNG,KAAM,WACNF,KAAM,GACNI,YAAa,GACbH,YAAa,cAgBjBI,WACEnD,KAAKoD,kBAAoBpD,KAAKsC,kBAAkBe,gBAC9CC,gCAEFtD,KAAKuD,UAAYC,aAAaC,QAAQ,QACtCzD,KAAK0D,0BAA0B1D,KAAKuD,WACpCvD,KAAK2D,eACL3D,KAAK4D,iBAAmB5D,KAAKmC,cAAc0B,YAAYC,UAAWC,IAChE/D,KAAKuD,UAAYQ,EACjB/D,KAAK0D,0BAA0B1D,KAAKuD,aAIxCI,eACE3D,KAAKgE,qBAAuBhE,KAAKqC,iBAC9BlC,kBACA2D,UAAWG,IACVjD,QAAQC,IAAIgD,GACZjE,KAAKkE,UAAU,GAAGpB,KAAOmB,EAASE,QAClCnE,KAAKkE,UAAU,GAAGhB,YAAc,aAItCQ,0BAA0BK,GACxB/D,KAAKoE,qBAAuBpE,KAAKoC,gBAC9BiC,sBAAsBN,GACtBD,UAAWG,IAIVjE,KAAKsE,WAHc,MAARC,OAAQ,EAARA,EAAUJ,SACjBF,EAASE,QAAQK,0BACjB,MAKVF,UAAUG,GACRzE,KAAK0E,cAAcC,KAAO3E,KAAK4E,QAC/B5E,KAAK0E,cAAcG,UAAY7E,KAAKkE,UACpClE,KAAK0E,cAAcI,YAAa,EAChC9E,KAAK0E,cAAcK,KAAO,qBAC1B/E,KAAK0E,cAAc5B,KAAO2B,EAC1BzE,KAAK0E,cAAcM,UAAW,EAC9BhF,KAAK0E,cAAcO,UAAW,EAC9BjF,KAAK0E,cAAcQ,YAAa,EAChClF,KAAK0E,cAAcS,WAAY,EAC/BnF,KAAK0E,cAAcU,mBAAqB,CAAC,cAAe,QAE1DC,wBACuB,QAArBC,OAAK1B,wBAAgB2B,SAAEC,cACE,QAAzBjB,OAAKP,4BAAoByB,SAAED,cACF,QAAzBE,OAAKtB,4BAAoBuB,SAAEH,4DAhGlBI,GAA2BhE,iFAA3BgE,EAA2BC,oOCfxCjE,iBAA2B,UAA3BA,CAA2B,WAGrBA,eACAA,kBAAoBA,gCAAmBA,YAG3CA,uBACFA,eADaA,wCAAuB,w2DDQvBgE,GAAb,KDFO,IAAME,EAAb,MAAM,sDAAOA,4DAHF,CAACC,cAAsBjE,IACtBiE,QAECD,GAAb,iBGKO,IAAME,EAAb,MAAM,sDAAOA,4DANF,CACPC,KACAH,EACAI,QAGSF,GAAb","names":["RateplansService","constructor","http","this","environment","Defines","getAllRatePlans","post","baseUrl","updateRatePlan","rateplans","updatedrateplans","rateplan","push","ratePlanCode","showFlag","ratePlanGroupKey","Object","updateRateplansList","console","log","ratePlans","getRateplaneGroup","key","parseInt","getAllRatePlanGroups","updateRatePlanGroup","rateplanGroup","createRateplanGroup","rateplaneGroup","deletRateplanGroup","i0","factory","routes","path","redirectTo","pathMatch","component","headerService","transferService","ratePlansService","privilegesService","footprintService","TableModel","fieldId","title","classStyle","fieldTitle","show","data","placeholder","type","inputType","optionLabel","ngOnInit","enableUpdatePatch","checkPrivileges","PRIVILEGES","epochDate","localStorage","getItem","getTransferAgjustmentList","getRatePlans","dateSubscription","DateSubject","subscribe","date","ratePlanSubscription","response","extraCols","payload","transferSubscription","getTransferAdjustment","fillTable","l","getTransferAdjustmentList","tableData","transferTable","cols","headers","extracols","pagination","name","lockFlag","editFlag","deleteFlag","hasSubmit","globalFilterFields","ngOnDestroy","t","_a","unsubscribe","_b","u","_c","TransferAdjustmentComponent","selectors","TransferAdjustmentRoutingModule","RouterModule","TransferAdjustmentModule","CommonModule","SharedModule"],"sourceRoot":"webpack:///","sources":["./src/app/rateplans/services/rateplans.service.ts","./src/app/transfer-adjustment/transfer-adjustment-routing.module.ts","./src/app/transfer-adjustment/layout/transfer-adjustment/transfer-adjustment.component.ts","./src/app/transfer-adjustment/layout/transfer-adjustment/transfer-adjustment.component.html","./src/app/transfer-adjustment/transfer-adjustment.module.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ApiResponse } from 'src/app/shared/statics/apiResponse';\r\nimport { Defines } from 'src/app/shared/statics/defines';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Rateplan } from '../models/rateplan.model';\r\nimport { RateplanGroup } from '../models/rateplanGroup.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RateplansService {\r\n  baseUrl: string = environment.url + Defines.LOOKUPS.LOOKUP_PATH;\r\n  constructor(private http: HttpClient) {}\r\n\r\n  public getAllRatePlans() {\r\n    return this.http.post<ApiResponse<any>>(\r\n      this.baseUrl +\r\n        Defines.RATEPLANS_ENDPOINTS.RATEPALN +\r\n        Defines.CRUD.GET_ALL,\r\n      {}\r\n    );\r\n  }\r\n  public updateRatePlan(rateplans: Rateplan[]) {\r\n    let updatedrateplans: any[] = [];\r\n    for (let rateplan of rateplans) {\r\n      updatedrateplans.push({\r\n        ratePlanCode: rateplan.ratePlanCode,\r\n        showFlag: rateplan.showFlag,\r\n        ratePlanGroupKey: rateplan.ratePlanGroupKey,\r\n      });\r\n    }\r\n    return this.http.post<ApiResponse<any>>(\r\n      this.baseUrl + Defines.RATEPLANS_ENDPOINTS.RATEPALN + Defines.CRUD.UPDATE,\r\n      {\r\n        ...updatedrateplans,\r\n      }\r\n    );\r\n  }\r\n  public updateRateplansList(rateplans: Rateplan[]) {\r\n    console.log(rateplans);\r\n    let updatedrateplans: any[] = [];\r\n    for (let rateplan of rateplans) {\r\n      updatedrateplans.push({\r\n        ratePlanCode: rateplan.ratePlanCode,\r\n        showFlag: rateplan.showFlag,\r\n        ratePlanGroupKey: rateplan.ratePlanGroupKey,\r\n      });\r\n    }\r\n    return this.http.post<ApiResponse<any>>(\r\n      this.baseUrl +\r\n        Defines.RATEPLANS_ENDPOINTS.RATEPALN +\r\n        Defines.CRUD.UPDATE_BATCH,\r\n      {\r\n        ratePlans: [...updatedrateplans],\r\n      }\r\n    );\r\n  }\r\n  public getRateplaneGroup(key: any) {\r\n    return this.http.post<ApiResponse<any>>(\r\n      this.baseUrl +\r\n        Defines.RATEPLANS_ENDPOINTS.RATEPALNGROUPS +\r\n        Defines.CRUD.GET,\r\n      { ratePlanGroupKey: parseInt(key) }\r\n    );\r\n  }\r\n  public getAllRatePlanGroups() {\r\n    return this.http.post<ApiResponse<any>>(\r\n      this.baseUrl +\r\n        Defines.RATEPLANS_ENDPOINTS.RATEPALNGROUPS +\r\n        Defines.CRUD.GET_ALL,\r\n      {}\r\n    );\r\n  }\r\n  public updateRatePlanGroup(rateplanGroup: RateplanGroup) {\r\n    return this.http.post<ApiResponse<any>>(\r\n      this.baseUrl +\r\n        Defines.RATEPLANS_ENDPOINTS.RATEPALNGROUPS +\r\n        Defines.CRUD.UPDATE,\r\n      { ...rateplanGroup }\r\n    );\r\n  }\r\n  public createRateplanGroup(rateplaneGroup: RateplanGroup) {\r\n    return this.http.post<ApiResponse<any>>(\r\n      this.baseUrl +\r\n        Defines.RATEPLANS_ENDPOINTS.RATEPALNGROUPS +\r\n        Defines.CRUD.ADD,\r\n      rateplaneGroup\r\n    );\r\n  }\r\n  public deletRateplanGroup(ratePlanGroupKey: number) {\r\n    return this.http\r\n      .post<ApiResponse<any>>(\r\n        this.baseUrl +\r\n          Defines.RATEPLANS_ENDPOINTS.RATEPALNGROUPS +\r\n          Defines.CRUD.DELETE,\r\n        { ratePlanGroupKey }\r\n      )\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TransferAdjustmentComponent } from './layout/transfer-adjustment/transfer-adjustment.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'adjustment', pathMatch: 'full' },\n  { path: 'adjustment', component: TransferAdjustmentComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TransferAdjustmentRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { HeaderService } from 'src/app/core/services/header-service/header.service';\r\nimport { RateplansService } from 'src/app/rateplans/services/rateplans.service';\r\nimport { TableModel } from 'src/app/shared/models/table.model';\r\nimport { FootprintService } from 'src/app/shared/services/footprint-service/footprint.service';\r\nimport { PrivilegesService } from 'src/app/shared/services/privileges-service/privileges.service';\r\nimport { PRIVILEGES } from 'src/app/shared/statics/privileges';\r\nimport { TransferAdjustmentService } from '../../services/transfer-adjustment.service';\r\n\r\n@Component({\r\n  selector: 'app-transfer-adjustment',\r\n  templateUrl: './transfer-adjustment.component.html',\r\n  styleUrls: ['./transfer-adjustment.component.scss'],\r\n})\r\nexport class TransferAdjustmentComponent implements OnInit {\r\n  epochDate!: any;\r\n  transferTable = new TableModel();\r\n  headers = [\r\n    { fieldId: 'trxTypeName', title: 'Transaction Type Name', classStyle: '' },\r\n    {\r\n      fieldId: 'subs',\r\n      title: 'Currrent Subs',\r\n      classStyle: 'blue tab-style width-num',\r\n    },\r\n  ];\r\n\r\n  extraCols = [\r\n    {\r\n      fieldId: 'adjust',\r\n      title: 'Export as Excel',\r\n      fieldTitle: 'Adjusts',\r\n      show: true,\r\n      data: [],\r\n      placeholder: 'Adjusts',\r\n      type: 'input',\r\n      inputType: 'number',\r\n    },\r\n    {\r\n      fieldId: 'ratePlan',\r\n      title: 'search',\r\n      fieldTitle: 'Rate plan',\r\n      show: true,\r\n      type: 'dropdown',\r\n      data: [],\r\n      optionLabel: '',\r\n      placeholder: 'Rate plan',\r\n    },\r\n  ];\r\n  ratePlanSubscription!: Subscription;\r\n  transferSubscription!: Subscription;\r\n  dateSubscription!: Subscription;\r\n  enableUpdatePatch!: boolean;\r\n\r\n  constructor(\r\n    private headerService: HeaderService,\r\n    private transferService: TransferAdjustmentService,\r\n    private ratePlansService: RateplansService,\r\n    private privilegesService: PrivilegesService,\r\n    private footprintService: FootprintService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.enableUpdatePatch = this.privilegesService.checkPrivileges(\r\n      PRIVILEGES.TRANSFER_ADJUSTMENT.UPDATE\r\n    );\r\n    this.epochDate = localStorage.getItem('date');\r\n    this.getTransferAgjustmentList(this.epochDate);\r\n    this.getRatePlans();\r\n    this.dateSubscription = this.headerService.DateSubject.subscribe((date) => {\r\n      this.epochDate = date;\r\n      this.getTransferAgjustmentList(this.epochDate);\r\n    });\r\n  }\r\n\r\n  getRatePlans() {\r\n    this.ratePlanSubscription = this.ratePlansService\r\n      .getAllRatePlans()\r\n      .subscribe((response) => {\r\n        console.log(response);\r\n        this.extraCols[1].data = response.payload;\r\n        this.extraCols[1].optionLabel = 'ratePlan';\r\n      });\r\n  }\r\n\r\n  getTransferAgjustmentList(date: number) {\r\n    this.transferSubscription = this.transferService\r\n      .getTransferAdjustment(date)\r\n      .subscribe((response) => {\r\n        let data = response?.payload\r\n          ? response.payload['getTransferAdjustmentList']\r\n          : [];\r\n        this.fillTable(data);\r\n      });\r\n  }\r\n\r\n  fillTable(tableData: any) {\r\n    this.transferTable.cols = this.headers;\r\n    this.transferTable.extracols = this.extraCols;\r\n    this.transferTable.pagination = true;\r\n    this.transferTable.name = 'transferAdjustment';\r\n    this.transferTable.data = tableData;\r\n    this.transferTable.lockFlag = false;\r\n    this.transferTable.editFlag = false;\r\n    this.transferTable.deleteFlag = false;\r\n    this.transferTable.hasSubmit = true;\r\n    this.transferTable.globalFilterFields = ['trxTypeName', 'subs'];\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.dateSubscription?.unsubscribe();\r\n    this.ratePlanSubscription?.unsubscribe();\r\n    this.transferSubscription?.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"layout-margin\">\n  <div class=\"row flex header\">\n    <div class=\"col-7 flex pt-4\">\n      <i class=\"icon-transfer\"></i>\n      <span class=\"text\"> Transfer Adjustment</span>\n    </div>\n  </div>\n  <app-table [table]=\"transferTable\" [enableUpdatePatch]=\"enableUpdatePatch\"></app-table>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TransferAdjustmentRoutingModule } from './transfer-adjustment-routing.module';\nimport { TransferAdjustmentComponent } from './layout/transfer-adjustment/transfer-adjustment.component';\nimport { SharedModule } from '../shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    TransferAdjustmentComponent\n  ],\n  imports: [\n    CommonModule,\n    TransferAdjustmentRoutingModule,\n    SharedModule\n  ]\n})\nexport class TransferAdjustmentModule { }\n"]}
{"version":3,"file":"src_app_prices_prices_module_ts.js","mappings":"qUAkCMA,0CAMEA,iEAoBEA,eAAKA,SAA2BA,kCAA3BA,8BC7CR,IAAMC,EAAb,MAAM,QAgBJC,YACUC,EACAC,EACAC,EACAC,GAHAC,qBACAA,aACAA,cACAA,wBAnBVA,gBAA2B,GAC3BA,gBAA2B,GAE3BA,cAAmB,MAInBA,cACEC,iBACA,IACAA,kBACA,IACAA,oBAUFC,WACEF,KAAKG,kBACDH,KAAKH,MAAMO,SAASC,OAAOC,KAC7BN,KAAKO,UAAYP,KAAKH,MAAMO,SAASC,OAAOC,GAC5CN,KAAKQ,SAA+C,SAApCR,KAAKH,MAAMO,SAASK,IAAI,GAAGC,KAC3CV,KAAKW,SAAWX,KAAKQ,SAAW,QAAU,QAE5CR,KAAKY,WACY,QAAjBZ,KAAKW,UAAqBX,KAAKa,iBAGjCV,kBACEH,KAAKc,sBAAwBd,KAAKJ,cAC/BmB,OAAO,UACPC,UAAWC,IACVjB,KAAKkB,WAAaD,EAASE,QAAQC,gBAAgBC,OAChDC,IACyB,OAApBA,EAAKC,aACPvB,KAAKwB,WAAa,CAChBC,cAAeH,EAAKG,cACpBD,WAAYF,EAAKE,WACjBE,eAAgBJ,EAAKI,eACrBH,WAAYD,EAAKC,aAGdvB,KAAKwB,aAGhBG,QAAQC,IAAI,wBAAyB5B,KAAKkB,cAIhDL,iBACEb,KAAK6B,gBAAkB7B,KAAKJ,cACzBkC,eAAe9B,KAAKO,WACpBS,UAAWC,IACVU,QAAQC,IAAI,KAAMX,EAASE,SAC3B,IAAIY,EAAUd,EAASE,QAAWa,aAC9BC,EAAUhB,EAASE,QAAWa,oBAC3BC,EAAQV,WACf,IAAIW,EAAUC,KAAKC,MACjBD,KAAKE,UAASC,+BACTL,GAAO,CACVM,iBAAkBtB,EAASE,QAAWqB,wBAG1CxC,KAAKD,iBAAiB0C,iBAAmBzC,KAAKO,UAC9CP,KAAKD,iBAAiB2C,eAAeR,GACrClC,KAAK2C,WAAa1B,EAASE,QAAWqB,oBAClCvB,EAASE,QAAWqB,oBACpB,GACJxC,KAAK4C,YAAYC,WAAW,CAC1Bd,QAASA,EAAQA,QACjBe,YAAaf,EAAQe,YACrBC,SAAUhB,EAAQgB,SAClBxB,WAAYQ,EAAQR,aAElBvB,KAAKQ,UAAUR,KAAK4C,YAAYI,YAI1CpC,WACEZ,KAAK4C,YAAc,IAAIK,KAAU,CAC/BlB,QAAS,IAAImB,KAAY,KAAMC,eAC/BL,YAAa,IAAII,KAAY,MAC7BH,SAAU,IAAIG,KACd3B,WAAY,IAAI2B,OAIpBE,WACE,IAAIrB,EAAmB,CACrBA,QAAS/B,KAAK4C,YAAYS,MAAMtB,QAChCe,YAAa9C,KAAK4C,YAAYS,MAAMP,YACpCC,SAAU/C,KAAK4C,YAAYS,MAAMN,UAE/BO,EAAQhB,+BAAQP,GAAO,CAAEQ,iBAAkBvC,KAAK2C,aAEpD,GADA3C,KAAKD,iBAAiBwD,eAAeD,GAChB,QAAjBtD,KAAKW,SAAoB,CAC3BoB,EAAQR,YAAcvB,KAAKO,UAC3B,IAAIiD,EAAO,CAAExB,aAAcD,EAASQ,iBAAkBvC,KAAK2C,YAC3DhB,QAAQC,IAAI,OAAQ4B,GACpBxD,KAAKJ,cAAc6D,cAAcD,GAAM,GAAMxC,UAAWC,IACtDU,QAAQC,IAAI,uBAAwBX,GAChCA,EAASyC,YAAczD,6BACzBD,KAAKF,OAAO6D,cAAc3D,KAAK4D,iBAKnC5D,KAAKJ,cAAc6D,cADR,CAAEzB,aAAcD,EAASQ,iBAAkBvC,KAAK2C,aACpB3B,UAAWC,IAChDU,QAAQC,IAAI,uBAAwBX,GAChCA,EAASyC,YAAczD,6BACzBD,KAAKF,OAAO6D,cAAc3D,KAAK4D,YAMvCC,sBACsB,QAApBC,OAAKjC,uBAAekC,SAAEC,cACI,QAA1BC,OAAKnD,6BAAqBoD,SAAEF,4DA5HnBtE,GAAuBD,wEAAvBC,EAAuByE,4hCDfpC1E,iBAA2B,QACrBA,SAAuBA,QAC3BA,kBAAmDA,mCAAY2E,eAC7D3E,iBAA+D,YAE3DA,mBAMAA,mBACGA,qBAASA,kBAAuBA,cAACA,YAGtCA,mBACEA,oBAOAA,oBAAyBA,yBAAYA,UAEvCA,mBACEA,yBAMAA,qBAA4BA,uBAASA,UAEvCA,4BAQFA,QACAA,mBAA8B,cACEA,kCAAoBA,QAClDA,0BAcEA,iCAGFA,qBA7DAA,0CACqBA,0CAyBjBA,6BAAe,cAAfA,CAAe,gBAQhBA,mCAWDA,sCAAqB,sBAArBA,CAAqB,gBAArBA,CAAqB,cAArBA,CAAqB,wBAArBA,CAAqB,wBAArBA,CAAqB,yvFC/BhBC,GAAb,2ECbAD,iBAAmD,cAM/CA,yCAAS4E,EAATC,MAASD,eACV5E,WCEI,IAAM8E,EAAb,MAAM,QAuBJ5E,YACUG,EACA0E,GADAxE,cACAA,yBAxBVA,YAAmB,CACjB,CACEyE,MAAO,WACPC,YAAa,UACbC,KAAM,QAER,CACEF,MAAO,cACPC,YAAa,cACbC,KAAM,QAER,CACEF,MAAO,YACPC,YAAa,WACbC,KAAM,WACNC,UAAS,IAYb1E,WACEF,KAAK6E,UAAY7E,KAAKwE,kBAAkBM,gBACtCC,kBAEF/E,KAAKgF,aAAehF,KAAKwE,kBAAkBM,gBACzCC,qBAEF/E,KAAKiF,YAAcjF,KAAKwE,kBAAkBM,gBACxCC,wBAEF/E,KAAKkF,aAAelF,KAAKwE,kBAAkBM,gBACzCC,qBAIJI,aACEnF,KAAKF,OAAO6D,cAAc,kEA5CjBY,GAAoB9E,iDAApB8E,EAAoBJ,gWDXjC1E,8BAEAA,uBASAA,sCAXkBA,2BAAqB,kBAArBA,CAAqB,eAELA,mCAUhCA,oCAAqB,kBAArBA,CAAqB,8BAArBA,CAAqB,8BAArBA,CAAqB,upBCDV8E,GAAb,GCCaa,EAAb,MAAM,QAgBJzF,YAAoBC,EAAsC4E,GAAtCxE,qBAAsCA,yBAf1DA,YAAmB,CACjB,CACEyE,MAAO,cACPC,YAAa,aACbC,KAAM,QAER,CACEF,MAAO,WACPC,YAAa,UACbC,KAAM,SAQVzE,WACEF,KAAKgF,aAAehF,KAAKwE,kBAAkBM,gBACzCC,wBAEF/E,KAAKqF,cAAgBrF,KAAKJ,cACvBmB,OAAO,YACPC,UAAWsE,IACV3D,QAAQC,IACN,gCACA0D,EAAInE,QAAQoE,8BAEdvF,KAAKwF,WAAa,CAChB,CACEf,MAAO,cACPC,YAAa,aACbC,KAAM,QAER,CACEF,MAAO,WACPC,YAAa,UACbC,KAAM,QAER,CACEF,MAAO,eACPC,YAAa,QACbC,KAAM,WACNc,QAASH,EAAInE,QAAQoE,6BAA6BG,IAC/CpE,IACc,CACXhB,GAAIgB,EAAKS,QACTsB,MAAO/B,EAAKC,kBAU5BsC,oBACoB,QAAlBC,OAAKuB,qBAAatB,SAAEC,4DA3DXoB,GAAmB3F,gDAAnB2F,EAAmBjB,0JCZhC1E,8BAA8F,+BAA5EA,yBAAmB,kBAAnBA,CAAmB,eAEnCA,kCAAmB,sBAAnBA,CAAmB,+ODUR2F,GAAb,iBEHA,MAAMO,EAAiB,CACrB,CACEjF,KAAM,GACNkF,UCLJ,MAAM,QAOJjG,eAEAO,WACEF,KAAK6F,MAAQ,CACX,CACEpB,MAAO,gBACPqB,WAAY,CAAC,UACbC,wBAAyB,mBAE3B,CACEtB,MAAO,YACPqB,WAAY,CAAC,YACbC,wBAAyB,kEAnBpBC,8BAAqB7B,2NCPlC1E,iBAA8C,WAE1CA,kBACAA,kBAAwBA,iCAAqBA,UAE/CA,iBACEA,uBACFA,QACAA,yBACFA,eAHeA,yuDDCFuG,GAAb,GDMIC,SAAU,CACR,CAAEvF,KAAM,GAAIwF,WAAY,SAAUC,UAAW,QAC7C,CACEzF,KAAM,SACNkF,UAAWR,EACXgB,YAAa,CAACC,KACdC,KAAM,CAAEC,UAAWxB,0BAErB,CACErE,KAAM,WACNkF,UAAWrB,EACX6B,YAAa,CAACC,KACdC,KAAM,CAAEC,UAAWxB,uBAErB,CACErE,KAAM,MACNkF,UAAWlG,EACX0G,YAAa,CAACC,KACdC,KAAM,CAAEC,UAAWxB,mBAErB,CACErE,KAAM,WACNkF,UAAWlG,EACX0G,YAAa,CAACC,KACdC,KAAM,CAAEC,UAAWxB,sBAErB,CACErE,KAAM,WACNkF,UAAWlG,EACX0G,YAAa,CAACC,KACdC,KAAM,CAAEC,UAAWxB,4BAUpB,IAAMyB,EAAb,MAAM,sDAAOA,4DAHF,CAACC,cAAsBd,IACtBc,QAECD,GAAb,iBGlCO,IAAME,EAAb,MAAM,sDAAOA,4DAFF,CAACC,KAAcH,EAAqBI,QAElCF,GAAb","names":["i0","CreatePgGroupsComponent","constructor","pricesService","route","router","footprintService","this","Defines","ngOnInit","getPricesGroups","snapshot","params","id","pgGroupId","viewMode","url","path","pageMode","initForm","getPgGroupByID","getpricesSubscription","getAll","subscribe","response","sourceList","payload","priceGroupModel","filter","item","pgGroupKey","priceGroup","priceGroupKey","priceGroupCode","console","log","getSubscription","getPgGroupById","pgGroup","pgGroupModel","oldData","pgClone","JSON","parse","stringify","Object","priceGroupModels","priceGroupModelList","objectIdentifier","handleOldValue","targetList","pgGroupForm","patchValue","description","showFlag","disable","FormGroup","FormControl","Validators","onSubmit","value","newValue","handleNewValue","body","managePgGroup","statusCode","navigateByUrl","urlRoute","ngOnDestroy","t","_a","unsubscribe","i","_b","selectors","ctx","ctx_r1","oxw","PricesGroupComponent","privilegesService","label","controlName","type","disabled","enableAdd","checkPrivileges","PRIVILEGES","enableUpdate","viewDetails","enableDelete","addPgGroup","PricesListComponent","pgSubcription","res","allPriceGroupGroupsResponses","listInputs","options","map","routes","component","items","routerLink","routerLinkActiveOptions","PricesLayoutComponent","children","redirectTo","pathMatch","canActivate","PrivilegesGuard","data","privilege","PricesRoutingModule","RouterModule","PricesModule","CommonModule","SharedModule"],"sourceRoot":"webpack:///","sources":["./src/app/prices/components/create-pg-groups/create-pg-groups.component.html","./src/app/prices/components/create-pg-groups/create-pg-groups.component.ts","./src/app/prices/components/prices-group/prices-group.component.html","./src/app/prices/components/prices-group/prices-group.component.ts","./src/app/prices/components/prices-list/prices-list.component.ts","./src/app/prices/components/prices-list/prices-list.component.html","./src/app/prices/prices-routing.module.ts","./src/app/prices/layout/prices-layout/prices-layout.component.ts","./src/app/prices/layout/prices-layout/prices-layout.component.html","./src/app/prices/prices.module.ts"],"sourcesContent":["<div class=\"add-container\">\r\n  <h2>{{ pageMode }} PG Group</h2>\r\n  <form autocomplete=\"off\" [formGroup]=\"pgGroupForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"pgGroup-form flex justify-content-between wrapper\">\r\n      <span class=\"p-float-label\">\r\n        <input\r\n          id=\"float-input\"\r\n          type=\"text\"\r\n          pInputText\r\n          formControlName=\"pgGroup\"\r\n        />\r\n        <label for=\"float-input\"\r\n          >PG Group <span class=\"required\">*</span>\r\n        </label>\r\n      </span>\r\n      <span class=\"p-float-label\">\r\n        <input\r\n          id=\"float-input\"\r\n          type=\"text\"\r\n          pInputText\r\n          formControlName=\"description\"\r\n           maxlength=\"50\"\r\n        />\r\n        <label for=\"float-input\">Description </label>\r\n      </span>\r\n      <span class=\"check\">\r\n        <p-checkbox\r\n          [binary]=\"true\"\r\n          [trueValue]=\"1\"\r\n          [falseValue]=\"0\"\r\n          formControlName=\"showFlag\"\r\n        ></p-checkbox>\r\n        <label class=\"check-label\"> show Flag</label>\r\n      </span>\r\n      <button\r\n        *ngIf=\"!viewMode\"\r\n        pButton\r\n        class=\"btn btn-basic\"\r\n        type=\"submit\"\r\n        label=\"submit\"\r\n        [disabled]=\"!pgGroupForm.valid\"\r\n      ></button>\r\n    </div>\r\n    <div class=\"picklist-content\">\r\n      <span class=\"pickList-title\"> Assign Price Groups:</span>\r\n      <p-pickList\r\n        [source]=\"sourceList\"\r\n        [target]=\"targetList\"\r\n        [responsive]=\"true\"\r\n        sourceHeader=\"Unassigned\"\r\n        targetHeader=\"Assigned\"\r\n        [dragdrop]=\"true\"\r\n        [showSourceControls]=\"false\"\r\n        [showTargetControls]=\"false\"\r\n        filterBy=\"name\"\r\n        sourceFilterPlaceholder=\"Search by name\"\r\n        targetFilterPlaceholder=\"Search by name\"\r\n        [disabled]=\"viewMode\"\r\n      >\r\n        <ng-template let-priceGroup pTemplate=\"item\">\r\n          <div>{{ priceGroup.priceGroup }}</div>\r\n        </ng-template>\r\n      </p-pickList>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { FootprintService } from 'src/app/shared/services/footprint-service/footprint.service';\r\nimport { Defines } from 'src/app/shared/statics/defines';\r\nimport { PGGroup } from '../../models/pgGroup.model';\r\nimport { PriceGroup } from '../../models/priceGroup.model';\r\nimport { PricesService } from '../../services/prices.service';\r\n\r\n@Component({\r\n  selector: 'app-create-pg-groups',\r\n  templateUrl: './create-pg-groups.component.html',\r\n  styleUrls: ['./create-pg-groups.component.scss'],\r\n})\r\nexport class CreatePgGroupsComponent implements OnInit {\r\n  sourceList: PriceGroup[] = [];\r\n  targetList: PriceGroup[] = [];\r\n  pgGroupForm!: FormGroup;\r\n  pageMode: string = 'Add';\r\n  pgGroupId!: number;\r\n  getSubscription!: Subscription;\r\n  getpricesSubscription!: Subscription;\r\n  urlRoute: string =\r\n    Defines.ROUTES.DAILY +\r\n    '/' +\r\n    Defines.ROUTES.PRICES +\r\n    '/' +\r\n    Defines.ROUTES.PGGROUPS;\r\n  viewMode!: boolean;\r\n\r\n  constructor(\r\n    private pricesService: PricesService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private footprintService: FootprintService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getPricesGroups();\r\n    if (this.route.snapshot.params['id']) {\r\n      this.pgGroupId = this.route.snapshot.params['id'];\r\n      this.viewMode = this.route.snapshot.url[0].path === 'view';\r\n      this.pageMode = this.viewMode ? 'View ' : 'Edit';\r\n    }\r\n    this.initForm();\r\n    this.pageMode == 'Edit' ? this.getPgGroupByID() : '';\r\n  }\r\n  priceGroup: any;\r\n  getPricesGroups() {\r\n    this.getpricesSubscription = this.pricesService\r\n      .getAll('prices')\r\n      .subscribe((response) => {\r\n        this.sourceList = response.payload.priceGroupModel.filter(\r\n          (item: any) => {\r\n            if (item.pgGroupKey === null) {\r\n              this.priceGroup = {\r\n                priceGroupKey: item.priceGroupKey,\r\n                priceGroup: item.priceGroup,\r\n                priceGroupCode: item.priceGroupCode,\r\n                pgGroupKey: item.pgGroupKey,\r\n              };\r\n            }\r\n            return this.priceGroup;\r\n          }\r\n        );\r\n        console.log('unassigned priceGroup', this.sourceList);\r\n      });\r\n  }\r\n\r\n  getPgGroupByID() {\r\n    this.getSubscription = this.pricesService\r\n      .getPgGroupById(this.pgGroupId)\r\n      .subscribe((response: any) => {\r\n        console.log('pg', response['payload']);\r\n        let pgGroup = response['payload']['pgGroupModel'];\r\n        let oldData = response['payload']['pgGroupModel'];\r\n        delete oldData['pgGroupKey'];\r\n        let pgClone = JSON.parse(\r\n          JSON.stringify({\r\n            ...oldData,\r\n            priceGroupModels: response['payload']['priceGroupModelList'],\r\n          })\r\n        );\r\n        this.footprintService.objectIdentifier = this.pgGroupId;\r\n        this.footprintService.handleOldValue(pgClone);\r\n        this.targetList = response['payload']['priceGroupModelList']\r\n          ? response['payload']['priceGroupModelList']\r\n          : [];\r\n        this.pgGroupForm.patchValue({\r\n          pgGroup: pgGroup.pgGroup,\r\n          description: pgGroup.description,\r\n          showFlag: pgGroup.showFlag,\r\n          pgGroupKey: pgGroup.pgGroupKey,\r\n        });\r\n        if (this.viewMode) this.pgGroupForm.disable();\r\n      });\r\n  }\r\n\r\n  initForm() {\r\n    this.pgGroupForm = new FormGroup({\r\n      pgGroup: new FormControl(null, Validators.required),\r\n      description: new FormControl(null),\r\n      showFlag: new FormControl(),\r\n      pgGroupKey: new FormControl(),\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    let pgGroup: PGGroup = {\r\n      pgGroup: this.pgGroupForm.value.pgGroup,\r\n      description: this.pgGroupForm.value.description,\r\n      showFlag: this.pgGroupForm.value.showFlag,\r\n    };\r\n    let newValue = { ...pgGroup, priceGroupModels: this.targetList };\r\n    this.footprintService.handleNewValue(newValue);\r\n    if (this.pageMode == 'Edit') {\r\n      pgGroup.pgGroupKey = +this.pgGroupId;\r\n      let body = { pgGroupModel: pgGroup, priceGroupModels: this.targetList };\r\n      console.log('body', body);\r\n      this.pricesService.managePgGroup(body, true).subscribe((response) => {\r\n        console.log('add profile response', response);\r\n        if (response.statusCode == Defines.RESPONSE_STATUS.SUCCESS) {\r\n          this.router.navigateByUrl(this.urlRoute);\r\n        }\r\n      });\r\n    } else {\r\n      let body = { pgGroupModel: pgGroup, priceGroupModels: this.targetList };\r\n      this.pricesService.managePgGroup(body).subscribe((response) => {\r\n        console.log('add profile response', response);\r\n        if (response.statusCode == Defines.RESPONSE_STATUS.SUCCESS) {\r\n          this.router.navigateByUrl(this.urlRoute);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.getSubscription?.unsubscribe();\r\n    this.getpricesSubscription?.unsubscribe();\r\n  }\r\n}\r\n","<app-service-form [source]=\"'pgGroups'\" [inputs]=\"inputs\" [isInline]=\"true\">\n</app-service-form>\n<div class=\"row align pt-3 pb-3\" *ngIf=\"enableAdd\">\n  <button\n    pButton\n    class=\"btn btn-basic right-0\"\n    type=\"button\"\n    label=\"Add PG Group\"\n    (click)=\"addPgGroup()\"\n  ></button>\n</div>\n<app-services-list\n  [source]=\"'pgGroups'\"\n  [inputs]=\"inputs\"\n  [enableUpdate]=\"enableUpdate\"\n  [enableDelete]=\"enableDelete\"\n  [viewDetails]=\"viewDetails\"\n></app-services-list>\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Inputs } from 'src/app/shared/models/inputs.model';\r\nimport { PrivilegesService } from 'src/app/shared/services/privileges-service/privileges.service';\r\nimport { PRIVILEGES } from 'src/app/shared/statics/privileges';\r\n\r\n@Component({\r\n  selector: 'app-prices-group',\r\n  templateUrl: './prices-group.component.html',\r\n  styleUrls: ['./prices-group.component.scss'],\r\n})\r\nexport class PricesGroupComponent implements OnInit {\r\n  inputs: Inputs[] = [\r\n    {\r\n      label: 'PG Group',\r\n      controlName: 'pgGroup',\r\n      type: 'text',\r\n    },\r\n    {\r\n      label: 'Description',\r\n      controlName: 'description',\r\n      type: 'text',\r\n    },\r\n    {\r\n      label: 'Show Flag',\r\n      controlName: 'showFlag',\r\n      type: 'checkbox',\r\n      disabled:true\r\n    },\r\n  ];\r\n  enableUpdate!: boolean;\r\n  enableAdd!: boolean;\r\n  enableDelete!: boolean;\r\n  viewDetails!: boolean;\r\n  constructor(\r\n    private router: Router,\r\n    private privilegesService: PrivilegesService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.enableAdd = this.privilegesService.checkPrivileges(\r\n      PRIVILEGES.PG_GROUP.ADD\r\n    );\r\n    this.enableUpdate = this.privilegesService.checkPrivileges(\r\n      PRIVILEGES.PG_GROUP.UPDATE\r\n    );\r\n    this.viewDetails = this.privilegesService.checkPrivileges(\r\n      PRIVILEGES.PG_GROUP.GET_BY_ID\r\n    );\r\n    this.enableDelete = this.privilegesService.checkPrivileges(\r\n      PRIVILEGES.PG_GROUP.DELETE\r\n    );\r\n  }\r\n\r\n  addPgGroup() {\r\n    this.router.navigateByUrl('daily/prices/add');\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Inputs } from 'src/app/shared/models/inputs.model';\r\nimport { PrivilegesService } from 'src/app/shared/services/privileges-service/privileges.service';\r\nimport { PRIVILEGES } from 'src/app/shared/statics/privileges';\r\nimport { PricesService } from '../../services/prices.service';\r\n\r\n@Component({\r\n  selector: 'app-prices-list',\r\n  templateUrl: './prices-list.component.html',\r\n  styleUrls: ['./prices-list.component.scss'],\r\n})\r\nexport class PricesListComponent implements OnInit, OnDestroy {\r\n  inputs: Inputs[] = [\r\n    {\r\n      label: 'Price Group',\r\n      controlName: 'priceGroup',\r\n      type: 'text',\r\n    },\r\n    {\r\n      label: 'PG Group',\r\n      controlName: 'pgGroup',\r\n      type: 'text',\r\n    },\r\n  ];\r\n  listInputs!: Inputs[];\r\n  pgSubcription!: Subscription;\r\n  enableUpdate!: boolean;\r\n  constructor(private pricesService: PricesService, private privilegesService:PrivilegesService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.enableUpdate = this.privilegesService.checkPrivileges(\r\n      PRIVILEGES.PRICE_GROUP.UPDATE\r\n    );\r\n    this.pgSubcription = this.pricesService\r\n      .getAll('pgPrices')\r\n      .subscribe((res: any) => {\r\n        console.log(\r\n          'get All pgPrices For dropdown',\r\n          res.payload.allPriceGroupGroupsResponses\r\n        );\r\n        this.listInputs = [\r\n          {\r\n            label: 'Price Group',\r\n            controlName: 'priceGroup',\r\n            type: 'text',\r\n          },\r\n          {\r\n            label: 'PG Group',\r\n            controlName: 'pgGroup',\r\n            type: 'text',\r\n          },\r\n          {\r\n            label: 'PG Group Key',\r\n            controlName: 'pgKey',\r\n            type: 'dropDown',\r\n            options: res.payload.allPriceGroupGroupsResponses.map(\r\n              (item: any) => {\r\n                let option = {\r\n                  id: item.pgGroup,\r\n                  value: item.pgGroupKey,\r\n                };\r\n                return option;\r\n              }\r\n            ), // get options from retrieve All pg Groups Api\r\n          },\r\n        ];\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.pgSubcription?.unsubscribe();\r\n  }\r\n}\r\n","<app-service-form [source]=\"'prices'\" [inputs]=\"inputs\" [isInline]=\"true\"> </app-service-form>\n<app-services-list\n  [source]=\"'prices'\"\n  [inputs]=\"listInputs\"\n  [enableUpdate]=\"enableUpdate\"\n></app-services-list>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PrivilegesGuard } from '../authentication/guards/privileges.guard';\nimport { PRIVILEGES } from '../shared/statics/privileges';\nimport { CreatePgGroupsComponent } from './components/create-pg-groups/create-pg-groups.component';\nimport { PricesGroupComponent } from './components/prices-group/prices-group.component';\nimport { PricesListComponent } from './components/prices-list/prices-list.component';\nimport { PricesLayoutComponent } from './layout/prices-layout/prices-layout.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PricesLayoutComponent,\n    children: [\n      { path: '', redirectTo: 'groups', pathMatch: 'full' },\n      {\n        path: 'groups',\n        component: PricesListComponent,\n        canActivate: [PrivilegesGuard],\n        data: { privilege: PRIVILEGES.PRICE_GROUP.GET_ALL },\n      },\n      {\n        path: 'pgGroups',\n        component: PricesGroupComponent,\n        canActivate: [PrivilegesGuard],\n        data: { privilege: PRIVILEGES.PG_GROUP.GET_ALL },\n      },\n      {\n        path: 'add',\n        component: CreatePgGroupsComponent,\n        canActivate: [PrivilegesGuard],\n        data: { privilege: PRIVILEGES.PG_GROUP.ADD },\n      },\n      {\n        path: 'edit/:id',\n        component: CreatePgGroupsComponent,\n        canActivate: [PrivilegesGuard],\n        data: { privilege: PRIVILEGES.PG_GROUP.UPDATE },\n      },\n      {\n        path: 'view/:id',\n        component: CreatePgGroupsComponent,\n        canActivate: [PrivilegesGuard],\n        data: { privilege: PRIVILEGES.PG_GROUP.GET_BY_ID },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PricesRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-prices-layout',\n  templateUrl: './prices-layout.component.html',\n  styleUrls: ['./prices-layout.component.scss'],\n})\nexport class PricesLayoutComponent implements OnInit {\n  items!: {\n    label: string;\n    routerLink: string[];\n    routerLinkActiveOptions: string;\n  }[];\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.items = [\n      {\n        label: 'Prices Groups',\n        routerLink: ['groups'],\n        routerLinkActiveOptions: '{ exact: true }',\n      },\n      {\n        label: 'PG Groups',\n        routerLink: ['pgGroups'],\n        routerLinkActiveOptions: '{ exact: true }',\n      },\n    ];\n  }\n}\n","<div class=\"services-container layout-margin\">\n  <div class=\"page-title\">\n    <span class=\"icon-rateplan head-icon\"></span>\n    <span class=\"head-font\">Manage Prices Groups </span>\n  </div>\n  <div class=\"tab-sec\">\n    <p-tabMenu [model]=\"items\"> </p-tabMenu>\n  </div>\n  <router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PricesRoutingModule } from './prices-routing.module';\nimport { PricesLayoutComponent } from './layout/prices-layout/prices-layout.component';\nimport { PricesListComponent } from './components/prices-list/prices-list.component';\nimport { PricesGroupComponent } from './components/prices-group/prices-group.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { CreatePgGroupsComponent } from './components/create-pg-groups/create-pg-groups.component';\n\n@NgModule({\n  declarations: [\n    PricesLayoutComponent,\n    PricesListComponent,\n    PricesGroupComponent,\n    CreatePgGroupsComponent,\n  ],\n  imports: [CommonModule, PricesRoutingModule, SharedModule],\n})\nexport class PricesModule {}\n"]}
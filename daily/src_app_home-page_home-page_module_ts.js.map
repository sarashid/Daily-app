{"version":3,"file":"src_app_home-page_home-page_module_ts.js","mappings":"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","names":["AppConfigService","constructor","this","theme","dark","inputStyle","ripple","Subject","configUpdate","asObservable","updateConfig","config","next","getConfig","factory","i0","ChartBarComponent","configService","validationService","headerService","tooltips","mode","intersect","responsive","scales","xAxes","stacked","yAxes","ngOnInit","date","localStorage","getItem","getBalance","Number","DateSubscriber","DateSubject","subscribe","updateChartOptions","subscription","configUpdate$","retrieveBalance","resp","data","payload","variance","Math","abs","console","log","stackedData","labels","datasets","type","label","backgroundColor","opening","closing","applyDarkTheme","applyLightTheme","stackedOptions","plugins","legend","color","x","ticks","grid","y","float","num1","num2","toFixed","recalc","height","toString","ngOnDestroy","unsubscribe","selectors","RateplansNumbersComponent","items","command","event","activeItem","onSubmit","epochDate","getData","dateSubscription","maximumList","minimumList","getMAxMinRatePlans","minimum","maximum","NewPriceGroupComponent","ngOnChanges","changes","NewServicesComponent","privilegesService","viewClasses","checkPrivileges","PRIVILEGES","viewTariffs","visible","serviceClasses","tarrifsModels","routes","path","redirectTo","pathMatch","component","getNotifications","notificationsSubject","viewNotification","viewBalnace","viewMaxMin","viewpriceGroup","notificationsSubsc","map","item","notificationType","Defines","checkList","priceGroups","fillList","list","timeArr","creationDate","split","Date","days","getTime","push","name","dataName","dataId","check","find","elem","HomeLayoutComponent","HomePageRoutingModule","RouterModule","HomePageModule","CommonModule","SharedModule","ValidationService","http","environment","getvalidationList","post","pathUrl","submitData","aggregationLists","retrieveTransactionTypes","get"],"sourceRoot":"webpack:///","sources":["./src/app/home-page/services/app-config.service.ts","./src/app/home-page/components/chart-bar/chart-bar.component.html","./src/app/home-page/components/chart-bar/chart-bar.component.ts","./src/app/home-page/components/rateplans-numbers/rateplans-numbers.component.html","./src/app/home-page/components/rateplans-numbers/rateplans-numbers.component.ts","./src/app/home-page/components/new-price-group/new-price-group.component.html","./src/app/home-page/components/new-price-group/new-price-group.component.ts","./src/app/home-page/components/new-services/new-services.component.html","./src/app/home-page/components/new-services/new-services.component.ts","./src/app/home-page/layout/home-layout/home-layout.component.html","./src/app/home-page/home-page-routing.module.ts","./src/app/home-page/layout/home-layout/home-layout.component.ts","./src/app/home-page/home-page.module.ts","./src/app/validation/services/validation.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { AppConfig } from '../models/appconfig.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AppConfigService {\r\n  config: AppConfig = {\r\n    theme: 'lara-light-blue',\r\n    dark: false,\r\n    inputStyle: 'outlined',\r\n    ripple: true,\r\n  };\r\n\r\n  private configUpdate = new Subject<AppConfig>();\r\n\r\n  configUpdate$ = this.configUpdate.asObservable();\r\n\r\n  updateConfig(config: AppConfig) {\r\n    this.config = config;\r\n    this.configUpdate.next(config);\r\n  }\r\n\r\n  getConfig() {\r\n    return this.config;\r\n  }\r\n}\r\n","<h4 class=\"m-0\">Variances Charts</h4>\r\n<div class=\"flex chart\">\r\n  <div class=\"flex\">\r\n    <div\r\n      class=\"flex-column align-items-end align-content-end justify-content-end ll pr-2\"\r\n    >\r\n      <div *ngIf=\"data?.opening + variance\">\r\n        <p>{{ float(data.opening, variance) }} M</p>\r\n      </div>\r\n      <div *ngIf=\"data?.opening\" [style]=\"{ height: recalc(data.opening, 0) }\">\r\n        <p>{{ float(data.opening, 0) }} M</p>\r\n      </div>\r\n      <div><p>0</p></div>\r\n    </div>\r\n    <table\r\n      id=\"stacked-example-3\"\r\n      class=\"charts-css column hide-data show-heading show-labels data-spacing-10 multiple stacked\"\r\n    >\r\n      <tbody class=\"tbody\">\r\n        <tr class=\"mt-5\">\r\n          <th class=\"text-center\" scope=\"row\">\r\n            <span class=\"pl-3\">Opening</span>\r\n          </th>\r\n          <td\r\n            [class]=\"variance==0 ? 'radius shadow' : 'shadow'\"\r\n            style=\"--size: calc({{ data?.opening / 89999 }} / 700)\"\r\n          ></td>\r\n          <td class=\"shadow\" style=\"--size: 0\">\r\n            <img src=\"./assets/images/icons/Path_81.svg\" />\r\n          </td>\r\n          <td\r\n            [class]=\"variance ? 'radius red-shadow' : ''\"\r\n            style=\"--size: calc({{ variance / 89999 }}/700)\"\r\n          ></td>\r\n        </tr>\r\n        <tr class=\"mt-5\">\r\n          <th scope=\"row\"><span class=\"pl-3\">Closing</span></th>\r\n          <td style=\"--size: 0\"></td>\r\n          <td\r\n            class=\"radius shadow\"\r\n            style=\"--size: calc({{ data?.closing / 89999 }} / 700)\"\r\n          ></td>\r\n          <td style=\"--size: 0\"></td>\r\n        </tr>\r\n        <tr></tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- <p-chart\r\n      width=\"50\"\r\n      height=\"200\"\r\n      type=\"bar\"\r\n      class=\"chart\"\r\n      [data]=\"stackedData\"\r\n      [options]=\"stackedOptions\"\r\n    ></p-chart> -->\r\n  </div>\r\n\r\n  <div class=\"h-100 w-15rem bgColor container\">\r\n    <div *ngIf=\"data\">\r\n      <div>\r\n        <i class=\"icon-dot blue\"></i>\r\n        <span\r\n          >Opening\r\n          <b *ngIf=\"data.opening\">{{ data.opening | number: \"2.\" }}</b>\r\n          <b *ngIf=\"!data.opening\">0</b></span\r\n        >\r\n      </div>\r\n      <div>\r\n        <i class=\"icon-dot green\"></i>\r\n        <span\r\n          >Closing &nbsp;<b *ngIf=\"data.closing\">{{\r\n            data.closing | number: \"2.\"\r\n          }}</b>\r\n          <b *ngIf=\"!data.closing\">0</b>\r\n        </span>\r\n      </div>\r\n      <div class=\"red\">\r\n        <i class=\"icon-dot\"></i>\r\n        <span\r\n          >Variance\r\n          <b *ngIf=\"data.variance\">{{ data.variance | number: \"2.\" }}</b>\r\n          <b *ngIf=\"!data.variance\">0</b></span\r\n        >\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- \r\n<table id=\"q-graph\">\r\n  <caption>\r\n    Quarterly Results\r\n  </caption>\r\n  <thead>\r\n    <tr>\r\n      <th></th>\r\n      <th class=\"sent\">Invoiced</th>\r\n      <th class=\"paid\">Collected</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr class=\"qtr\" id=\"q1\">\r\n      <th scope=\"row\">Q1</th>\r\n      <td class=\"sent bar\" style=\"height: 111px\"><p>$18,450.00</p></td>\r\n      <td class=\"paid bar\" style=\"height: 99px\"><p>$16,500.00</p></td>\r\n    </tr>\r\n    <tr class=\"qtr\" id=\"q2\">\r\n      <th scope=\"row\">Q2</th>\r\n      <td class=\"sent bar\" style=\"height: 206px\"><p>$34,340.72</p></td>\r\n      <td class=\"paid bar\" style=\"height: 194px\"><p>$32,340.72</p></td>\r\n    </tr>\r\n    <tr class=\"qtr\" id=\"q3\">\r\n      <th scope=\"row\">Q3</th>\r\n      <td class=\"sent bar\" style=\"height: 259px\"><p>$43,145.52</p></td>\r\n      <td class=\"paid bar\" style=\"height: 193px\"><p>$32,225.52</p></td>\r\n    </tr>\r\n    <tr class=\"qtr\" id=\"q4\">\r\n      <th scope=\"row\">Q4</th>\r\n      <td class=\"sent bar\" style=\"height: 110px\"><p>$18,415.96</p></td>\r\n      <td class=\"paid bar\" style=\"height: 195px\"><p>$32,425.00</p></td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<div id=\"ticks\">\r\n  <div class=\"tick\" style=\"height: 59px\"><p>$50,000</p></div>\r\n  <div class=\"tick\" style=\"height: 59px\"><p>$40,000</p></div>\r\n  <div class=\"tick\" style=\"height: 59px\"><p>$30,000</p></div>\r\n  <div class=\"tick\" style=\"height: 59px\"><p>$20,000</p></div>\r\n  <div class=\"tick\" style=\"height: 59px\"><p>$10,000</p></div>\r\n</div> -->\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { HeaderService } from 'src/app/core/services/header-service/header.service';\r\nimport { ValidationService } from 'src/app/validation/services/validation.service';\r\nimport { AppConfig } from '../../models/appconfig.model';\r\nimport { AppConfigService } from '../../services/app-config.service';\r\n\r\n@Component({\r\n  selector: 'app-chart-bar',\r\n  templateUrl: './chart-bar.component.html',\r\n  styleUrls: ['./chart-bar.component.scss'],\r\n})\r\nexport class ChartBarComponent implements OnInit, OnDestroy {\r\n  stackedData: any;\r\n  stackedOptions: any = {\r\n    tooltips: {\r\n      mode: 'index',\r\n      intersect: false,\r\n    },\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          stacked: true,\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          stacked: true,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  subscription!: Subscription;\r\n  config!: AppConfig;\r\n  data: any;\r\n  DateSubscriber!: Subscription;\r\n  variance: number = 0;\r\n  constructor(\r\n    private configService: AppConfigService,\r\n    private validationService: ValidationService,\r\n    private headerService: HeaderService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    let date = localStorage.getItem('date');\r\n    this.getBalance(Number(date));\r\n    this.DateSubscriber = this.headerService.DateSubject.subscribe((date) => {\r\n      this.getBalance(date);\r\n    });\r\n\r\n    this.config = this.configService.config;\r\n    this.updateChartOptions();\r\n    this.subscription = this.configService.configUpdate$.subscribe((config) => {\r\n      this.config = config;\r\n      this.updateChartOptions();\r\n    });\r\n  }\r\n  getBalance(date: number) {\r\n    this.validationService.retrieveBalance(date).subscribe((resp: any) => {\r\n      this.data = resp.payload;\r\n      this.variance = Math.abs(this.data.variance);\r\n      console.log(this.variance);\r\n      this.stackedData = {\r\n        labels: ['Opening', 'Closing'],\r\n        datasets: [\r\n          {\r\n            type: 'bar',\r\n            label: 'Opening',\r\n            backgroundColor: '#36ACFF',\r\n            data: [this.data.opening, 0],\r\n          },\r\n          {\r\n            type: 'bar',\r\n            label: 'Closing',\r\n            backgroundColor: '#69D0D0',\r\n            data: [0, this.data.closing],\r\n          },\r\n          {\r\n            type: 'bar',\r\n            label: 'Variance',\r\n            backgroundColor: '#E60000',\r\n            data: [Math.abs(this.data.variance), 0],\r\n          },\r\n        ],\r\n      };\r\n    });\r\n  }\r\n  updateChartOptions() {\r\n    if (this.config.dark) this.applyDarkTheme();\r\n    else this.applyLightTheme();\r\n  }\r\n\r\n  applyLightTheme() {\r\n    this.stackedOptions = {\r\n      plugins: {\r\n        tooltips: {\r\n          mode: 'index',\r\n          intersect: false,\r\n        },\r\n        legend: {\r\n          labels: {\r\n            color: '#495057',\r\n          },\r\n        },\r\n      },\r\n      scales: {\r\n        x: {\r\n          stacked: true,\r\n          ticks: {\r\n            color: '#495057',\r\n          },\r\n          grid: {\r\n            color: '#ebedef',\r\n          },\r\n        },\r\n        y: {\r\n          stacked: true,\r\n          ticks: {\r\n            color: '#495057',\r\n          },\r\n          grid: {\r\n            color: '#ebedef',\r\n          },\r\n        },\r\n      },\r\n    };\r\n  }\r\n  applyDarkTheme() {\r\n    this.stackedOptions = {\r\n      plugins: {\r\n        legend: {\r\n          labels: {\r\n            color: '#ebedef',\r\n          },\r\n        },\r\n        tooltips: {\r\n          mode: 'index',\r\n          intersect: false,\r\n        },\r\n      },\r\n      scales: {\r\n        x: {\r\n          stacked: true,\r\n          ticks: {\r\n            color: '#ebedef',\r\n          },\r\n          grid: {\r\n            color: 'rgba(255,255,255,0.2)',\r\n          },\r\n        },\r\n        y: {\r\n          stacked: true,\r\n          ticks: {\r\n            color: '#ebedef',\r\n          },\r\n          grid: {\r\n            color: 'rgba(255,255,255,0.2)',\r\n          },\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  float(num1: number, num2: number) {\r\n    let sum = Number(num1) + Number(num2);\r\n    return (sum / 1000000).toFixed(2);\r\n  }\r\n  recalc(num1: number, num2: number) {\r\n    let height = ((Number(num1) + Number(num2)) / 340824.3).toString();\r\n    console.log(height);\r\n    return height + 'px';\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n    this.DateSubscriber.unsubscribe();\r\n  }\r\n}\r\n","<h4 class=\"m-0\">Rate Plans in Numbers</h4>\r\n<div class=\"services-container dashboard-rateplans\">\r\n  <div class=\"tab-sec\">\r\n    <p-tabMenu [model]=\"items\" [activeItem]=\"activeItem\"> </p-tabMenu>\r\n  </div>\r\n  <p-table class=\"table-font-style\" [value]=\"data\" responsiveLayout=\"scroll\">\r\n    <ng-template pTemplate=\"header\"></ng-template>\r\n    <ng-template pTemplate=\"body\" let-rateplan let-rowIndex=\"rowIndex\">\r\n      <tr>\r\n        <td>\r\n          <i\r\n            class=\"icon-dot\"\r\n            [ngStyle]=\"{\r\n              color:\r\n                activeItem.label == 'Highest In-Subs' ? '#31D578' : '#ee4b4b'\r\n            }\"\r\n          ></i>\r\n          <b class=\"pr-2\"\r\n            >{{ rowIndex + 1 }}\r\n            <sup *ngIf=\"rowIndex + 1 == 1\">st</sup>\r\n            <sup *ngIf=\"rowIndex + 1 == 2\">nd</sup>\r\n            <sup *ngIf=\"rowIndex + 1 == 3\">th</sup>\r\n          </b>\r\n          {{ rateplan.ratePlan }}\r\n        </td>\r\n        <td>\r\n          <p class=\"font-style\">Opening</p>\r\n          {{ rateplan.opening | number: \"2.\" }}\r\n        </td>\r\n        <td>\r\n          <p class=\"font-style\">Closing</p>\r\n          {{ rateplan.closing | number: \"2.\" }}\r\n        </td>\r\n        <td>\r\n          <div\r\n            class=\"box-style\"\r\n            [ngStyle]=\"{\r\n              'background-color':\r\n                activeItem.label == 'Highest In-Subs'\r\n                  ? '#31d57836'\r\n                  : 'rgb(238, 75, 75,.5)'\r\n            }\"\r\n          >\r\n            <i\r\n              [ngClass]=\"{\r\n                'icon-arrow-up': activeItem.label === 'Highest In-Subs',\r\n                'icon-arrow-bottom': activeItem.label === 'Lowest In-Subs'\r\n              }\"\r\n            ></i\r\n            ><b> {{ rateplan.variance | number: \"2.\" }}</b>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"emptymessage\">\r\n      <tr>\r\n        <td colspan=\"7\" style=\"text-align: center\">No Data found.</td>\r\n      </tr>\r\n    </ng-template>\r\n  </p-table>\r\n</div>\r\n\r\n<!-- <span *ngIf=\"activeItem.label === 'Highest In-Subs'\">+</span\r\n              ><span *ngIf=\"activeItem.label === 'Lowest In-Subs'\">-</span> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { Subscription } from 'rxjs';\r\nimport { HeaderService } from 'src/app/core/services/header-service/header.service';\r\nimport { Rateplan } from 'src/app/rateplans/models/rateplan.model';\r\nimport { ValidationService } from 'src/app/validation/services/validation.service';\r\n\r\n@Component({\r\n  selector: 'app-rateplans-numbers',\r\n  templateUrl: './rateplans-numbers.component.html',\r\n  styleUrls: ['./rateplans-numbers.component.scss'],\r\n})\r\nexport class RateplansNumbersComponent implements OnInit {\r\n  items!: MenuItem[];\r\n  activeItem!: MenuItem;\r\n  data!: any[];\r\n  epochDate!: number;\r\n  dateSubscription!: Subscription;\r\n  minimumList!: Rateplan[];\r\n  maximumList!: Rateplan[];\r\n\r\n  constructor(\r\n    private validationService: ValidationService,\r\n    private headerService: HeaderService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.items = [\r\n      {\r\n        label: 'Highest In-Subs',\r\n        command: (event) => {\r\n          this.activeItem = this.items[0];\r\n          this.onSubmit();\r\n        },\r\n      },\r\n      {\r\n        label: 'Lowest In-Subs',\r\n        command: (event) => {\r\n          this.activeItem = this.items[1];\r\n          this.onSubmit();\r\n        },\r\n      },\r\n    ];\r\n    this.activeItem = this.items[0];\r\n    this.epochDate = Number(localStorage.getItem('date'));\r\n    this.getData();\r\n    this.dateSubscription = this.headerService.DateSubject.subscribe((date) => {\r\n      this.epochDate = date;\r\n      this.getData();\r\n    });\r\n  }\r\n  onSubmit() {\r\n    if (this.activeItem.label === 'Highest In-Subs') {\r\n      console.log('hello Highest In-Subs ');\r\n      this.data = this.maximumList;\r\n    }\r\n    if (this.activeItem.label === 'Lowest In-Subs') {\r\n      console.log('hello Lowest In-Subs ');\r\n      this.data = this.minimumList;\r\n    }\r\n  }\r\n  getData() {\r\n    this.validationService\r\n      .getMAxMinRatePlans(this.epochDate)\r\n      .subscribe((resp) => {\r\n        this.minimumList = resp.payload.minimum;\r\n        this.maximumList = resp.payload.maximum;\r\n        this.onSubmit();\r\n      });\r\n  }\r\n}\r\n","<div class=\"row flex header\">\r\n  <div class=\"col-7 flex pt-4\">\r\n    <i class=\"icon-rateplan head-icon\"></i>\r\n    <span class=\"text\">New Price Group</span>\r\n  </div>\r\n</div>\r\n<div style=\"margin-top: 3rem\" class=\"dashboard-pg\">\r\n  <p-table\r\n    class=\"table-font-style dashboard-pg\"\r\n    [paginator]=\"priceGroups && priceGroups.length > 0\"\r\n    [totalRecords]=\"priceGroups.length\"\r\n    [rows]=\"3\"\r\n    [value]=\"priceGroups\"\r\n    responsiveLayout=\"scroll\"\r\n  >\r\n    <ng-template pTemplate=\"header\"></ng-template>\r\n    <ng-template pTemplate=\"body\" let-priceGroup let-rowIndex=\"rowIndex\">\r\n      <tr>\r\n        <td class=\"left-border\">\r\n          <i class=\"icon-flag\"></i>\r\n          {{ priceGroup.name }}\r\n        </td>\r\n        <td class=\"right-border\" style=\"text-align: right\">\r\n          {{ priceGroup.date == 0 ? \"Today\" : priceGroup.date + \" Day Ago\" }}\r\n        </td>\r\n      </tr>\r\n      <p></p>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"emptymessage\">\r\n      <tr>\r\n        <td colspan=\"7\" style=\"text-align: center\">No Data found.</td>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"paginatorright\">\r\n      <button\r\n        pButton\r\n        class=\"btn btn-basic\"\r\n        type=\"button\"\r\n        label=\"See All\"\r\n        routerLink=\"/daily/prices/groups\"\r\n      ></button>\r\n    </ng-template>\r\n  </p-table>\r\n</div>\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { MenuItem } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-new-price-group',\r\n  templateUrl: './new-price-group.component.html',\r\n  styleUrls: ['./new-price-group.component.scss'],\r\n})\r\nexport class NewPriceGroupComponent implements OnInit, OnChanges {\r\n  @Input('priceGroups') priceGroups!: any[];\r\n  pageSize = 3;\r\n  // data: any[] = [\r\n  //   { name: 'price 1', date: '1 Day Ago' },\r\n  //   { name: 'price 2', date: '1 Day Ago' },\r\n  //   { name: 'price 3', date: '1 Day Ago' },\r\n  //   { name: 'price 4', date: '1 Day Ago' },\r\n  // ];\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n  ngOnChanges(changes: SimpleChanges): void {}\r\n}\r\n","<div class=\"row flex header\" *ngIf=\"viewClasses || viewTariffs\">\r\n  <div class=\"col-7 flex pt-4\">\r\n    <span class=\"icon-services head-icon\"></span>\r\n    <span class=\"text\">New Service Classes / Tariffs</span>\r\n  </div>\r\n</div>\r\n<div class=\"services-container\">\r\n  <div class=\"tab-sec\">\r\n    <p-tabMenu [model]=\"items\" [activeItem]=\"activeItem\"> </p-tabMenu>\r\n  </div>\r\n  <p-table\r\n    class=\"table-font-style dashboard-pg\"\r\n    [paginator]=\"data && data.length > 0\"\r\n    [totalRecords]=\"data.length\"\r\n    [rows]=\"pageSize\"\r\n    [value]=\"data\"\r\n    responsiveLayout=\"scroll\"\r\n  >\r\n    <ng-template pTemplate=\"header\"></ng-template>\r\n    <ng-template pTemplate=\"body\" let-item let-rowIndex=\"rowIndex\">\r\n      <tr>\r\n        <td class=\"left-border\">\r\n          <i class=\"icon-flag\"></i>\r\n          {{ item.name }}\r\n        </td>\r\n        <td class=\"right-border\" style=\"text-align: right\">\r\n          {{ item.date == 0 ? \"Today\" : item.date + \" Day Ago\" }}\r\n        </td>\r\n      </tr>\r\n      <p></p>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"emptymessage\">\r\n      <tr>\r\n        <td colspan=\"7\" style=\"text-align: center\">No Data found.</td>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"paginatorright\">\r\n      <button\r\n        pButton\r\n        class=\"btn btn-basic\"\r\n        type=\"button\"\r\n        label=\"See All\"\r\n        [routerLink]=\"\r\n          activeItem.label == 'Service Classes'\r\n            ? '/daily/services/classes'\r\n            : '/daily/services/tariffs'\r\n        \"\r\n      ></button>\r\n    </ng-template>\r\n  </p-table>\r\n</div>\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { PrivilegesService } from 'src/app/shared/services/privileges-service/privileges.service';\r\nimport { PRIVILEGES } from 'src/app/shared/statics/privileges';\r\n\r\n@Component({\r\n  selector: 'app-new-services',\r\n  templateUrl: './new-services.component.html',\r\n  styleUrls: ['./new-services.component.scss'],\r\n})\r\nexport class NewServicesComponent implements OnInit, OnChanges {\r\n  @Input('tarrifsModels') tarrifsModels: any;\r\n  @Input('serviceClasses') serviceClasses: any;\r\n  items!: MenuItem[];\r\n  activeItem!: MenuItem;\r\n  data: any[] = [];\r\n  viewClasses!: boolean;\r\n  viewTariffs!: boolean;\r\n  pageSize = 3;\r\n  constructor(private privilegesService: PrivilegesService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.viewClasses = this.privilegesService.checkPrivileges(\r\n      PRIVILEGES.SERVICES_CLASSES.GET_ALL\r\n    );\r\n    this.viewTariffs = this.privilegesService.checkPrivileges(\r\n      PRIVILEGES.SERVICES_TARIFFS.GET_ALL\r\n    );\r\n    this.items = [\r\n      {\r\n        label: 'Service Classes',\r\n        command: (event) => {\r\n          this.activeItem = this.items[0];\r\n          this.onSubmit();\r\n        },\r\n        visible: this.viewClasses,\r\n      },\r\n      {\r\n        label: 'Tariffs',\r\n        command: (event) => {\r\n          this.activeItem = this.items[1];\r\n          this.onSubmit();\r\n        },\r\n        visible: this.viewTariffs,\r\n      },\r\n    ];\r\n    this.activeItem = this.items[0];\r\n    this.onSubmit();\r\n  }\r\n  onSubmit() {\r\n    if (this.activeItem.label === 'Service Classes' && this.viewClasses) {\r\n      this.data = this.serviceClasses;\r\n    }\r\n    if (this.activeItem.label === 'Tariffs' && this.viewTariffs) {\r\n      this.data = this.tarrifsModels;\r\n    }\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.items = [\r\n      {\r\n        label: 'Service Classes',\r\n        command: (event) => {\r\n          this.activeItem = this.items[0];\r\n          this.onSubmit();\r\n        },\r\n        visible: this.viewClasses,\r\n      },\r\n      {\r\n        label: 'Tariffs',\r\n        command: (event) => {\r\n          this.activeItem = this.items[1];\r\n          this.onSubmit();\r\n        },\r\n        visible: this.viewTariffs,\r\n      },\r\n    ];\r\n    this.activeItem = this.items[0];\r\n    this.onSubmit();\r\n  }\r\n}\r\n","<div class=\"row layout-margin\">\r\n  <div class=\"row flex header\">\r\n    <div class=\"col-7 flex pt-4\">\r\n      <i class=\"icon-chart head-icon\"></i>\r\n      <span class=\"text\">SUBS Variances Chart</span>\r\n    </div>\r\n  </div>\r\n  <div class=\"row flex\" *ngIf=\"viewBalnace || viewMaxMin\">\r\n    <div class=\"col-6\" *ngIf=\"viewBalnace\">\r\n      <app-chart-bar></app-chart-bar>\r\n    </div>\r\n    <div class=\"col-6\" *ngIf=\"viewMaxMin\">\r\n      <app-rateplans-numbers></app-rateplans-numbers>\r\n    </div>\r\n  </div>\r\n  <div class=\"row flex\">\r\n    <div class=\"col-6\" *ngIf=\"viewNotification && viewpriceGroup\">\r\n      <app-new-price-group [priceGroups]=\"priceGroups\"></app-new-price-group>\r\n    </div>\r\n    <div class=\"col-6\">\r\n      <app-new-services\r\n        *ngIf=\"viewNotification\"\r\n        [serviceClasses]=\"serviceClasses\"\r\n        [tarrifsModels]=\"tarrifsModels\"\r\n      ></app-new-services>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeLayoutComponent } from './layout/home-layout/home-layout.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full' },\r\n  { path: 'dashboard', component: HomeLayoutComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class HomePageRoutingModule {}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Notification } from 'src/app/core/models/notification.model';\r\nimport { HeaderService } from 'src/app/core/services/header-service/header.service';\r\nimport { PrivilegesService } from 'src/app/shared/services/privileges-service/privileges.service';\r\nimport { Defines } from 'src/app/shared/statics/defines';\r\nimport { PRIVILEGES } from 'src/app/shared/statics/privileges';\r\n\r\n@Component({\r\n  selector: 'app-home-layout',\r\n  templateUrl: './home-layout.component.html',\r\n  styleUrls: ['./home-layout.component.scss'],\r\n})\r\nexport class HomeLayoutComponent implements OnInit, OnDestroy {\r\n  notificationsSubsc!: Subscription;\r\n  priceGroups: any[] = [];\r\n  serviceClasses: any[] = [];\r\n  tarrifsModels: any[] = [];\r\n  viewNotification!: boolean;\r\n  viewBalnace!: boolean;\r\n  viewMaxMin!: boolean;\r\n  viewpriceGroup!: boolean;\r\n  constructor(\r\n    private headerService: HeaderService,\r\n    private privilegesService: PrivilegesService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.headerService.getNotifications().subscribe((resp) => {\r\n      this.headerService.notificationsSubject.next(resp.payload);\r\n    });\r\n\r\n    this.viewNotification = this.privilegesService.checkPrivileges(\r\n      PRIVILEGES.NOTIFICATIONS.GET_ALL\r\n    );\r\n    this.viewBalnace = this.privilegesService.checkPrivileges(\r\n      PRIVILEGES.VALIDATION.BALANCE\r\n    );\r\n    this.viewMaxMin = this.privilegesService.checkPrivileges(\r\n      PRIVILEGES.DASHBOARD.MAX_MIN_AGG_DATE\r\n    );\r\n    this.viewpriceGroup = this.privilegesService.checkPrivileges(\r\n      PRIVILEGES.PRICE_GROUP.GET_ALL\r\n    );\r\n    this.notificationsSubsc = this.headerService.notificationsSubject.subscribe(\r\n      (resp) => {\r\n        resp?.map((item) => {\r\n          if (item.notificationType == Defines.NOTIFICATION_TYPE.PRICE_GROUP) {\r\n            this.checkList(this.priceGroups, item);\r\n          }\r\n          if (\r\n            item.notificationType == Defines.NOTIFICATION_TYPE.SERVICE_CLASS\r\n          ) {\r\n            this.checkList(this.serviceClasses, item);\r\n          }\r\n          if (item.notificationType == Defines.NOTIFICATION_TYPE.TARRIF_MODEL) {\r\n            this.checkList(this.tarrifsModels, item);\r\n          }\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  fillList(list: any, item: any) {\r\n    let timeArr = item.creationDate.split('-');\r\n    let date = new Date(timeArr[0], timeArr[1] - 1, timeArr[2]);\r\n    let days = new Date().getTime() - new Date(date).getTime();\r\n    days = days / (1000 * 3600 * 24);\r\n\r\n    list.push({\r\n      name: item.dataName,\r\n      date: ~~days,\r\n      dataId: item.dataId,\r\n    });\r\n  }\r\n  checkList(list: any[], item: any) {\r\n    let check;\r\n    check = list.find((elem) => elem.dataId == item.dataId);\r\n    check ? '' : this.fillList(list, item);\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.notificationsSubsc.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HomeLayoutComponent } from './layout/home-layout/home-layout.component';\r\nimport { ChartBarComponent } from './components/chart-bar/chart-bar.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { HomePageRoutingModule } from './home-page-routing.module';\r\nimport { RateplansNumbersComponent } from './components/rateplans-numbers/rateplans-numbers.component';\r\nimport { NewPriceGroupComponent } from './components/new-price-group/new-price-group.component';\r\nimport { NewServicesComponent } from './components/new-services/new-services.component';\r\n\r\n@NgModule({\r\n  declarations: [ HomeLayoutComponent, ChartBarComponent, RateplansNumbersComponent, NewPriceGroupComponent, NewServicesComponent],\r\n  imports: [CommonModule, SharedModule,HomePageRoutingModule],\r\n})\r\nexport class HomePageModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { ApiResponse } from 'src/app/shared/statics/apiResponse';\r\nimport { Defines } from 'src/app/shared/statics/defines';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AggregationData } from '../models/aggregation-data.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ValidationService {\r\n  updateBalance = new Subject<object>();\r\n  pathUrl: string =\r\n    environment.url +\r\n    Defines.VALIDATION_ENDPOINTS.REPORT_SERVICE +\r\n    Defines.VALIDATION_ENDPOINTS.VALIDATION_ENGINE;\r\n  constructor(private http: HttpClient) {}\r\n  public getvalidationList(epochDate: number) {\r\n    let pathUrl =\r\n      this.pathUrl +\r\n      Defines.VALIDATION_ENDPOINTS.AGGREGATION_DATA +\r\n      Defines.CRUD.GET_ALL;\r\n    return this.http.post<ApiResponse<AggregationData[]>>(pathUrl, {\r\n      date: epochDate,\r\n    });\r\n  }\r\n  public retrieveBalance(epochDate: number) {\r\n    let pathUrl =\r\n      this.pathUrl +\r\n      Defines.VALIDATION_ENDPOINTS.BALANCES +\r\n      Defines.CRUD.GET_ALL;\r\n    return this.http.post<ApiResponse<any>>(pathUrl, {\r\n      date: epochDate,\r\n    });\r\n  }\r\n  public submitData(data: AggregationData[]) {\r\n    let pathUrl = this.pathUrl + Defines.CRUD.UPDATE;\r\n    return this.http.post<ApiResponse<any>>(pathUrl, {\r\n      aggregationLists: data,\r\n    });\r\n  }\r\n  public retrieveTransactionTypes() {\r\n    let pathUrl =\r\n      this.pathUrl +\r\n      Defines.VALIDATION_ENDPOINTS.TRANSACTION_TYPE +\r\n      Defines.CRUD.GET_ALL;\r\n    return this.http.get<ApiResponse<any>>(pathUrl, {});\r\n  }\r\n  public getMAxMinRatePlans(epochDate: number) {\r\n    let pathUrl =\r\n      environment.url +\r\n      Defines.VALIDATION_ENDPOINTS.REPORT_SERVICE +\r\n      Defines.VALIDATION_ENDPOINTS.DASH_BOARD +\r\n      Defines.VALIDATION_ENDPOINTS.AGGREGATION_DATA +\r\n      Defines.CRUD.GET;\r\n    return this.http.post<ApiResponse<any>>(pathUrl, {\r\n      date: epochDate,\r\n    });\r\n  }\r\n}\r\n"]}
{"version":3,"file":"src_app_rateplans_rateplans_module_ts.js","mappings":"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","names":["RateplansLayoutComponent","constructor","ngOnInit","this","items","label","routerLink","routerLinkActiveOptions","selectors","i0","ctx_r2","oxw","RateplanGroupsListComponent","router","privilegesService","controlName","type","readOnly","enableAdd","checkPrivileges","PRIVILEGES","enableUpdate","enableDelete","viewDetails","addRateplaneGroup","navigateByUrl","RateplansListComponent","rateplansService","getAllRatePlanGroups","subscribe","resp","allRatePlansGroups","payload","console","log","inputs","options","id","value","ManageRateplanGroupComponent","route","footprintService","snapshot","params","rateplanGroupKey","viewMode","url","path","pageMode","getAllRatePlans","sourceList","filter","element","ratePlanGroupKey","initForm","getRateplaneGroupByKey","rateplaneGroupForm","FormGroup","ratePlanGroup","FormControl","Validators","description","showFlag","getRateplaneGroup","rateplanGroup","cloneData","JSON","parse","stringify","objectIdentifier","handleOldValue","patchValue","targetList","ratePlans","disable","onSubmit","Object","map","item","ratePlanCode","parseInt","handleNewValue","updateRatePlanGroup","createRateplanGroup","ctx","routes","component","children","redirectTo","pathMatch","canActivate","PrivilegesGuard","data","privilege","RateplansRoutingModule","RouterModule","RateplansModule","CommonModule","SharedModule"],"sourceRoot":"webpack:///","sources":["./src/app/rateplans/layout/rateplans-layout/rateplans-layout.component.ts","./src/app/rateplans/layout/rateplans-layout/rateplans-layout.component.html","./src/app/rateplans/components/rateplan-groups-list/rateplan-groups-list.component.html","./src/app/rateplans/components/rateplan-groups-list/rateplan-groups-list.component.ts","./src/app/rateplans/components/rateplans-list/rateplans-list.component.html","./src/app/rateplans/components/rateplans-list/rateplans-list.component.ts","./src/app/rateplans/components/manage-rateplan-group/manage-rateplan-group.component.html","./src/app/rateplans/components/manage-rateplan-group/manage-rateplan-group.component.ts","./src/app/rateplans/rateplans-routing.module.ts","./src/app/rateplans/rateplans.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { MenuItem } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-rateplans-layout',\r\n  templateUrl: './rateplans-layout.component.html',\r\n  styleUrls: ['./rateplans-layout.component.scss'],\r\n})\r\nexport class RateplansLayoutComponent implements OnInit {\r\n  items!: MenuItem[];\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {this.items = [\r\n    {\r\n      label: 'Rateplans',\r\n      routerLink: ['rateplans'],\r\n      routerLinkActiveOptions: '{ exact: true }',\r\n    },\r\n    {\r\n      label: 'Rateplans Groups',\r\n      routerLink: ['rateplansGroups'],\r\n      routerLinkActiveOptions: '{ exact: true }',\r\n    },\r\n  ];\r\n  }\r\n}\r\n","<div class=\"services-container layout-margin\">\r\n  <div class=\"page-title\">\r\n    <span class=\"icon-mark head-icon\"></span>\r\n    <span class=\"head-font\">Manage Rateplanes</span>\r\n  </div>\r\n  <div class=\"tab-sec\">\r\n    <p-tabMenu [model]=\"items\"> </p-tabMenu>\r\n  </div>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","<div *ngIf=\"inputs?.length\">\r\n  <app-service-form [source]=\"'rateplansGroups'\" [inputs]=\"inputs\" [isInline]=\"true\">\r\n  </app-service-form>\r\n  <div class=\"row align pt-3 pb-3\">\r\n    <button\r\n      pButton\r\n      class=\"btn btn-basic right-0\"\r\n      type=\"button\"\r\n      label=\"Add Rateplane Group\"\r\n      *ngIf=\"enableAdd\"\r\n      (click)=\"addRateplaneGroup()\"\r\n    ></button>\r\n  </div>\r\n  <app-services-list\r\n    [source]=\"'rateplansGroups'\"\r\n    [inputs]=\"inputs\"\r\n    [enableUpdate]=\"enableUpdate\"\r\n    [enableDelete]=\"enableDelete\"\r\n    [viewDetails]=\"viewDetails\"\r\n  ></app-services-list>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Inputs } from 'src/app/shared/models/inputs.model';\r\nimport { PrivilegesService } from 'src/app/shared/services/privileges-service/privileges.service';\r\nimport { PRIVILEGES } from 'src/app/shared/statics/privileges';\r\n\r\n@Component({\r\n  selector: 'app-rateplan-groups-list',\r\n  templateUrl: './rateplan-groups-list.component.html',\r\n  styleUrls: ['./rateplan-groups-list.component.scss'],\r\n})\r\nexport class RateplanGroupsListComponent implements OnInit {\r\n  inputs: Inputs[] = [\r\n    {\r\n      label: 'Rateplan Group',\r\n      controlName: 'ratePlanGroup',\r\n      type: 'text',\r\n    },\r\n    {\r\n      label: 'Description',\r\n      controlName: 'description',\r\n      type: 'text',\r\n    },\r\n    {\r\n      label: 'Show Flag',\r\n      controlName: 'showFlag',\r\n      type: 'checkbox',\r\n      readOnly: true,\r\n    },\r\n  ];\r\n\r\n  enableUpdate!: boolean;\r\n  enableAdd!: boolean;\r\n  enableDelete!: boolean;\r\n  viewDetails!: boolean;\r\n  constructor(private router:Router,private privilegesService:PrivilegesService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.enableAdd = this.privilegesService.checkPrivileges(\r\n      PRIVILEGES.RATE_PLANS_GROUP.ADD\r\n    );\r\n    this.enableUpdate = this.privilegesService.checkPrivileges(\r\n      PRIVILEGES.RATE_PLANS_GROUP.UPDATE\r\n    );\r\n    this.enableDelete = this.privilegesService.checkPrivileges(\r\n      PRIVILEGES.RATE_PLANS_GROUP.DELETE\r\n    );\r\n    this.viewDetails = this.privilegesService.checkPrivileges(\r\n      PRIVILEGES.RATE_PLANS_GROUP.GET_BY_ID\r\n    );\r\n  }\r\n  addRateplaneGroup() {\r\n    this.router.navigateByUrl('daily/rateplans/rateplansGroups/add');\r\n  }\r\n}\r\n","<div *ngIf=\"inputs?.length\">\r\n  <app-service-form [source]=\"'rateplans'\" [inputs]=\"inputs\">\r\n  </app-service-form>\r\n  <app-services-list\r\n    [source]=\"'rateplans'\"\r\n    [inputs]=\"inputs\"\r\n    [enableUpdate]=\"enableUpdate\"\r\n  ></app-services-list>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Inputs } from 'src/app/shared/models/inputs.model';\r\nimport { PrivilegesService } from 'src/app/shared/services/privileges-service/privileges.service';\r\nimport { PRIVILEGES } from 'src/app/shared/statics/privileges';\r\nimport { RateplansService } from '../../services/rateplans.service';\r\n\r\n@Component({\r\n  selector: 'app-rateplans-list',\r\n  templateUrl: './rateplans-list.component.html',\r\n  styleUrls: ['./rateplans-list.component.scss'],\r\n})\r\nexport class RateplansListComponent implements OnInit {\r\n  inputs: Inputs[] = [];\r\n  allRatePlansGroups!: any[];\r\n  enableUpdate!: boolean;\r\n  constructor(private rateplansService: RateplansService,private privilegesService:PrivilegesService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.enableUpdate = this.privilegesService.checkPrivileges(\r\n      PRIVILEGES.RATE_PLANS.UPDATE_lIST\r\n    );\r\n    this.rateplansService.getAllRatePlanGroups().subscribe((resp) => {\r\n      this.allRatePlansGroups = resp.payload;\r\n      console.log(this.allRatePlansGroups);\r\n      this.inputs = [\r\n        {\r\n          label: 'Rateplan Name',\r\n          controlName: 'ratePlan',\r\n          type: 'text',\r\n        },\r\n        {\r\n          label: 'Type',\r\n          controlName: 'ratePlanType',\r\n          type: 'dropDown',\r\n          options: [\r\n            { id: 'Prepaid', value: 1 },\r\n            { id: 'Postpaid', value: 2 },\r\n          ],\r\n          readOnly: true,\r\n        },\r\n\r\n        {\r\n          label: 'Contract Type',\r\n          controlName: 'contractType',\r\n          type: 'dropDown',\r\n          options: [\r\n            { id: 'Consumer', value: 1 },\r\n            { id: 'Enterprise', value: 2 },\r\n            { id: 'All', value: 3 },\r\n          ],\r\n          readOnly: true,\r\n        },\r\n        {\r\n          label: 'Rateplan Group',\r\n          controlName: 'ratePlanGroupKey',\r\n          type: 'dropDown',\r\n          options: this.allRatePlansGroups,\r\n        },\r\n        {\r\n          label: 'Activation Source',\r\n          controlName: 'activationSourceFlag',\r\n          type: 'checkbox',\r\n          readOnly: true,\r\n        },\r\n        {\r\n          label: 'Show Flag',\r\n          controlName: 'showFlag',\r\n          type: 'checkbox',\r\n        },\r\n      ];\r\n    });\r\n  }\r\n}\r\n","<div class=\"add-container\">\r\n  <h2>{{ pageMode }} Rateplan Group</h2>\r\n  <form\r\n    autocomplete=\"off\"\r\n    [formGroup]=\"rateplaneGroupForm\"\r\n    (ngSubmit)=\"onSubmit()\"\r\n  >\r\n    <div class=\"profile-form flex justify-content-between wrapper\">\r\n      <span class=\"p-float-label\">\r\n        <input\r\n          id=\"float-input\"\r\n          type=\"text\"\r\n          pInputText\r\n          formControlName=\"ratePlanGroup\"\r\n          maxlength=\"50\"\r\n        />\r\n        <label for=\"float-input\"\r\n          >Rateplane Group Name <span class=\"required\">*</span>\r\n        </label>\r\n      </span>\r\n      <span class=\"p-float-label\">\r\n        <input\r\n          id=\"float-input\"\r\n          type=\"text\"\r\n          pInputText\r\n          formControlName=\"description\"\r\n          maxlength=\"50\"\r\n        />\r\n        <label for=\"float-input\">Rateplane Group Describtion </label>\r\n      </span>\r\n      <span class=\"check\">\r\n        <p-checkbox\r\n          [binary]=\"true\"\r\n          [trueValue]=\"1\"\r\n          [falseValue]=\"0\"\r\n          formControlName=\"showFlag\"\r\n        ></p-checkbox>\r\n        <label class=\"check-label\">Show Flag </label>\r\n      </span>\r\n      <div>\r\n        <button\r\n          *ngIf=\"!viewMode\"\r\n          pButton\r\n          class=\"btn btn-basic\"\r\n          type=\"submit\"\r\n          label=\"submit\"\r\n          [disabled]=\"!rateplaneGroupForm.valid\"\r\n        ></button>\r\n        <button\r\n          *ngIf=\"!viewMode\"\r\n          pButton\r\n          pRipple\r\n          type=\"Cancel\"\r\n          label=\"Cancel\"\r\n          class=\"p-button-danger p-button-text white-button\"\r\n          routerLink=\"/daily/rateplans/rateplansGroups\"\r\n        ></button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"picklist-content\">\r\n      <span class=\"pickList-title pt-3 pb-3\"> Assign Rateplans:</span>\r\n      <p-pickList\r\n        [source]=\"sourceList\"\r\n        [target]=\"targetList\"\r\n        [responsive]=\"true\"\r\n        sourceHeader=\"Unassigned Rateplans\"\r\n        targetHeader=\"Assigned Rateplans\"\r\n        [dragdrop]=\"true\"\r\n        [showSourceControls]=\"false\"\r\n        [showTargetControls]=\"false\"\r\n        filterBy=\"ratePlan\"\r\n        sourceFilterPlaceholder=\"Search by name\"\r\n        targetFilterPlaceholder=\"Search by name\"\r\n        [disabled]=\"viewMode\"\r\n      >\r\n        <ng-template let-ratePlan pTemplate=\"item\">\r\n          <div>{{ ratePlan?.ratePlan }}</div>\r\n        </ng-template>\r\n      </p-pickList>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FootprintService } from 'src/app/shared/services/footprint-service/footprint.service';\r\nimport { Rateplan } from '../../models/rateplan.model';\r\nimport { RateplanGroup } from '../../models/rateplanGroup.model';\r\nimport { RateplansService } from '../../services/rateplans.service';\r\n\r\n@Component({\r\n  selector: 'app-manage-rateplan-group',\r\n  templateUrl: './manage-rateplan-group.component.html',\r\n  styleUrls: ['./manage-rateplan-group.component.scss'],\r\n})\r\nexport class ManageRateplanGroupComponent implements OnInit {\r\n  rateplanGroupKey!: any;\r\n  pageMode: string = 'Add';\r\n  rateplaneGroupForm!: FormGroup;\r\n  sourceList: Rateplan[] = [];\r\n  targetList: Rateplan[] = [];\r\n  viewMode!: boolean;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private rateplansService: RateplansService,\r\n    private footprintService: FootprintService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    if (this.route.snapshot.params['id']) {\r\n      this.rateplanGroupKey = this.route.snapshot.params['id'];\r\n      this.viewMode = this.route.snapshot.url[1].path === 'view';\r\n      this.pageMode = this.viewMode ? 'View ' : 'Edit';\r\n    }\r\n    this.rateplansService.getAllRatePlans().subscribe((resp) => {\r\n      this.sourceList = resp.payload.filter((element: any) => {\r\n        return !element.ratePlanGroupKey;\r\n      });\r\n      console.log(this.sourceList);\r\n    });\r\n    this.initForm();\r\n\r\n    this.pageMode == 'Edit' ? this.getRateplaneGroupByKey() : '';\r\n  }\r\n\r\n  initForm() {\r\n    this.rateplaneGroupForm = new FormGroup({\r\n      ratePlanGroup: new FormControl(null, Validators.required),\r\n      description: new FormControl(null),\r\n      showFlag: new FormControl(null),\r\n    });\r\n  }\r\n  getRateplaneGroupByKey() {\r\n    this.rateplansService\r\n      .getRateplaneGroup(this.rateplanGroupKey)\r\n      .subscribe((resp) => {\r\n        let rateplanGroup = resp.payload;\r\n        let cloneData = JSON.parse(JSON.stringify(resp.payload));\r\n        console.log('get rateplan by key', cloneData);\r\n        this.footprintService.objectIdentifier = this.rateplanGroupKey;\r\n        this.footprintService.handleOldValue(cloneData);\r\n        this.rateplaneGroupForm.patchValue({\r\n          description: rateplanGroup.description,\r\n          ratePlanGroup: rateplanGroup.ratePlanGroup,\r\n          showFlag: rateplanGroup.showFlag,\r\n        });\r\n        this.targetList = rateplanGroup.ratePlans;\r\n        if (this.viewMode) this.rateplaneGroupForm.disable();\r\n      });\r\n  }\r\n  onSubmit() {\r\n    let rateplanGroup = {\r\n      ...this.rateplaneGroupForm.value,\r\n      showFlag: this.rateplaneGroupForm.value.showFlag == null ? 0 : 1,\r\n      ratePlans: this.targetList.map((item) => {\r\n        return {\r\n          ratePlanCode: item.ratePlanCode,\r\n        };\r\n      }),\r\n    };\r\n\r\n    if (this.pageMode == 'Edit') {\r\n      rateplanGroup = {\r\n        ratePlanGroupKey: parseInt(this.rateplanGroupKey),\r\n        ...this.rateplaneGroupForm.value,\r\n        ratePlans: this.targetList.map((item) => {\r\n          return {\r\n            ratePlanCode: item.ratePlanCode,\r\n            ratePlanGroupKey: parseInt(this.rateplanGroupKey),\r\n          };\r\n        }),\r\n      };\r\n      this.footprintService.handleNewValue(rateplanGroup);\r\n      this.rateplansService\r\n        .updateRatePlanGroup(rateplanGroup)\r\n        .subscribe((resp) => {\r\n          this.router.navigateByUrl('daily/rateplans/rateplansGroups');\r\n        });\r\n    } else {\r\n      this.footprintService.handleNewValue(rateplanGroup);\r\n      this.rateplansService\r\n        .createRateplanGroup(rateplanGroup)\r\n        .subscribe((resp) => {\r\n          this.router.navigateByUrl('daily/rateplans/rateplansGroups');\r\n        });\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RateplansLayoutComponent } from './layout/rateplans-layout/rateplans-layout.component';\r\nimport { RateplanGroupsListComponent } from './components/rateplan-groups-list/rateplan-groups-list.component';\r\nimport { RateplansListComponent } from './components/rateplans-list/rateplans-list.component';\r\nimport { ManageRateplanGroupComponent } from './components/manage-rateplan-group/manage-rateplan-group.component';\r\nimport { PrivilegesGuard } from '../authentication/guards/privileges.guard';\r\nimport { PRIVILEGES } from '../shared/statics/privileges';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RateplansLayoutComponent,\r\n    children: [\r\n      { path: '', redirectTo: 'rateplans', pathMatch: 'full' },\r\n      { path: 'rateplans', component: RateplansListComponent,\r\n      canActivate: [PrivilegesGuard],\r\n      data: { privilege: PRIVILEGES.RATE_PLANS.GET_ALL }, },\r\n      {\r\n        path: 'rateplansGroups',\r\n        component: RateplanGroupsListComponent,\r\n        canActivate: [PrivilegesGuard],\r\n        data: { privilege: PRIVILEGES.RATE_PLANS_GROUP.GET_ALL },\r\n      },\r\n      {\r\n        path: 'rateplansGroups/add',\r\n        component: ManageRateplanGroupComponent,\r\n        canActivate: [PrivilegesGuard],\r\n        data: { privilege: PRIVILEGES.RATE_PLANS_GROUP.ADD },\r\n      },\r\n      {\r\n        path: 'rateplansGroups/edit/:id',\r\n        component: ManageRateplanGroupComponent,\r\n        canActivate: [PrivilegesGuard],\r\n        data: { privilege: PRIVILEGES.RATE_PLANS_GROUP.UPDATE },\r\n      },\r\n      {\r\n        path: 'rateplansGroups/view/:id',\r\n        component: ManageRateplanGroupComponent,\r\n        canActivate: [PrivilegesGuard],\r\n        data: { privilege: PRIVILEGES.RATE_PLANS_GROUP.GET_BY_ID },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RateplansRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RateplansRoutingModule } from './rateplans-routing.module';\r\nimport { RateplansLayoutComponent } from './layout/rateplans-layout/rateplans-layout.component';\r\nimport { RateplansListComponent } from './components/rateplans-list/rateplans-list.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { RateplanGroupsListComponent } from './components/rateplan-groups-list/rateplan-groups-list.component';\r\nimport { ManageRateplanGroupComponent } from './components/manage-rateplan-group/manage-rateplan-group.component';\r\n\r\n@NgModule({\r\n  declarations: [RateplansLayoutComponent, RateplansListComponent, RateplanGroupsListComponent, ManageRateplanGroupComponent],\r\n  imports: [CommonModule, RateplansRoutingModule, SharedModule],\r\n})\r\nexport class RateplansModule {}\r\n"]}
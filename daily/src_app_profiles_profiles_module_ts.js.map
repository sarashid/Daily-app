{"version":3,"file":"src_app_profiles_profiles_module_ts.js","mappings":"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","names":["i0","AddProfileComponent","constructor","profilesService","route","router","footprintService","this","Defines","ngOnInit","snapshot","params","id","profileId","viewMode","url","path","pageMode","initForm","getProfileByID","getPrivilieges","unassignedPrivileges","privileges","targetList","forEach","element","filter","priv","getPrivilegesList","subscribe","resp","sourceList","payload","getSubscription","getProfileById","response","profile","objectIdentifier","profileClone","name","isActive","JSON","parse","stringify","console","log","handleOldValue","profileForm","patchValue","disable","FormGroup","FormControl","Validators","onSubmit","value","handleNewValue","manageProfile","statusCode","navigateByUrl","urlRoute","ngOnDestroy","t","_a","unsubscribe","selectors","ctx","ProfilesListComponent","privilegesService","TableModel","fieldId","title","show","enableUpdate","checkPrivileges","PRIVILEGES","enableDelete","viewDetails","showSubject","next","includes","listSubscription","getProfilesList","profilesList","fillTable","profilesTable","cols","headers","extracols","extraCols","pagination","lockFlag","editFlag","deleteFlag","globalFilterFields","data","ctx_r2","oxw","routes","component","cdr","enableAdd","showSubscription","flag","showBtn","detectChanges","addProfile","ProfilesManagementComponent","children","redirectTo","pathMatch","canActivate","PrivilegesGuard","privilege","ProfilesRoutingModule","RouterModule","ProfilesModule","CommonModule","SharedModule"],"sourceRoot":"webpack:///","sources":["./src/app/profiles/components/add-profile/add-profile.component.html","./src/app/profiles/components/add-profile/add-profile.component.ts","./src/app/profiles/components/profiles-list/profiles-list.component.ts","./src/app/profiles/components/profiles-list/profiles-list.component.html","./src/app/profiles/layouts/profiles-management/profiles-management.component.html","./src/app/profiles/profiles-routing.module.ts","./src/app/profiles/layouts/profiles-management/profiles-management.component.ts","./src/app/profiles/profiles.module.ts"],"sourcesContent":["<div class=\"add-container\">\r\n  <h2>{{ pageMode }}Profile</h2>\r\n  <form autocomplete=\"off\"  [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"profile-form\">\r\n      <span class=\"p-float-label\">\r\n        <input\r\n          id=\"float-input\"\r\n          type=\"text\"\r\n          pInputText\r\n          formControlName=\"name\"\r\n          maxlength=\"50\"\r\n        />\r\n        <label for=\"float-input\"\r\n          >Profile Name <span class=\"required\">*</span>\r\n        </label>\r\n      </span>\r\n      <button\r\n        *ngIf=\"!viewMode\"\r\n        pButton\r\n        class=\"btn btn-basic\"\r\n        type=\"submit\"\r\n        label=\"submit\"\r\n        [disabled]=\"!profileForm.valid\"\r\n      ></button>\r\n      <!-- <button\r\n        *ngIf=\"!viewMode\"\r\n        pButton\r\n        class=\"btn btn-basic\"\r\n        type=\"Cancel\"\r\n        label=\"Cancel\"\r\n        routerLink=\"/daily/profiles/list\"\r\n      ></button> -->\r\n\r\n      <button\r\n        *ngIf=\"!viewMode\"\r\n        pButton\r\n        pRipple\r\n        type=\"Cancel\"\r\n        label=\"Cancel\"\r\n        class=\"p-button-danger p-button-text white-button\"\r\n        routerLink=\"/daily/profiles/list\"\r\n      ></button>\r\n    </div>\r\n\r\n    <!-- <hr class=\"page-divider\" /> -->\r\n    <div class=\"picklist-content\">\r\n      <span class=\"pickList-title\"> Assign Privileges:</span>\r\n      <p-pickList\r\n        [source]=\"sourceList\"\r\n        [target]=\"targetList\"\r\n        [responsive]=\"true\"\r\n        sourceHeader=\"Unassigned\"\r\n        targetHeader=\"Assigned\"\r\n        [dragdrop]=\"true\"\r\n        [showSourceControls]=\"false\"\r\n        [showTargetControls]=\"false\"\r\n        filterBy=\"name\"\r\n        sourceFilterPlaceholder=\"Search by name\"\r\n        targetFilterPlaceholder=\"Search by name\"\r\n        [disabled]=\"viewMode\"\r\n      >\r\n        <ng-template let-privilege pTemplate=\"item\">\r\n          <div>{{ privilege.name }}</div>\r\n        </ng-template>\r\n      </p-pickList>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { FootprintService } from 'src/app/shared/services/footprint-service/footprint.service';\r\nimport { Defines } from 'src/app/shared/statics/defines';\r\nimport { Privilege } from '../../models/privileges.model';\r\nimport { Profile } from '../../models/profile.model';\r\nimport { ProfilesService } from '../../services/profiles.service';\r\n\r\n@Component({\r\n  selector: 'app-add-profile',\r\n  templateUrl: './add-profile.component.html',\r\n  styleUrls: ['./add-profile.component.scss'],\r\n})\r\nexport class AddProfileComponent implements OnInit, OnDestroy {\r\n  sourceList: Privilege[] = [];\r\n  targetList: Privilege[] = [];\r\n  profileForm!: FormGroup;\r\n  pageMode: string = 'Add';\r\n  profileId: any;\r\n  getSubscription!: Subscription;\r\n  urlRoute: string =\r\n    Defines.ROUTES.DAILY +\r\n    '/' +\r\n    Defines.ROUTES.PROIFLES +\r\n    '/' +\r\n    Defines.ROUTES.LIST;\r\n  isActive: number = 1;\r\n  viewMode!: boolean;\r\n\r\n  constructor(\r\n    private profilesService: ProfilesService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private footprintService:FootprintService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    if (this.route.snapshot.params['id']) {\r\n      this.profileId = this.route.snapshot.params['id'];\r\n      this.viewMode = this.route.snapshot.url[0].path === 'view';\r\n      this.pageMode = this.viewMode ? 'View ' : 'edit';\r\n    }\r\n    this.initForm();\r\n    this.pageMode == 'edit' ? this.getProfileByID() : this.getPrivilieges();\r\n  }\r\n\r\n  unassignedPrivileges(privileges: any[]) {\r\n    this.targetList.forEach((element) => {\r\n      privileges = privileges.filter((priv) => {\r\n        return priv.id !== element.id;\r\n      });\r\n    });\r\n    return privileges;\r\n  }\r\n\r\n  getPrivilieges() {\r\n    this.profilesService.getPrivilegesList().subscribe((resp) => {\r\n      this.sourceList = this.unassignedPrivileges(\r\n        resp['payload']['privileges']\r\n      );\r\n    });\r\n  }\r\n  getProfileByID() {\r\n    this.getSubscription = this.profilesService\r\n      .getProfileById(this.profileId)\r\n      .subscribe((response: any) => {\r\n        let profile = response['payload']['profile'];\r\n        this.footprintService.objectIdentifier = profile.id;\r\n        let profileClone:Profile = {\r\n          name: profile.name,\r\n          isActive: profile.isActive,\r\n          privileges: profile.privileges,\r\n        };\r\n        profileClone = JSON.parse(JSON.stringify(profileClone));\r\n        console.log(\"profileClone\",profileClone);\r\n        this.footprintService.handleOldValue(profileClone);\r\n        this.targetList = profile.privileges;\r\n        this.isActive = profile.isActive;\r\n        this.getPrivilieges();\r\n        this.profileForm.patchValue({\r\n          name: profile.name,\r\n        });\r\n        if(this.viewMode) this.profileForm.disable();\r\n      });\r\n  }\r\n\r\n  initForm() {\r\n    this.profileForm = new FormGroup({\r\n      name: new FormControl(null, Validators.required),\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    let profile: Profile = {\r\n      name: this.profileForm.value.name,\r\n      isActive: this.isActive,\r\n      privileges: this.targetList,\r\n    };\r\n    if (this.pageMode == 'edit') {\r\n      this.footprintService.handleNewValue(profile);\r\n      profile.id = this.profileId;\r\n      this.profilesService\r\n        .manageProfile(profile,this.pageMode)\r\n        .subscribe((response) => {\r\n          console.log('add profile response', response);\r\n          if (response.statusCode == 0) {\r\n            this.router.navigateByUrl(this.urlRoute);\r\n          }\r\n        });\r\n    } else {\r\n      this.footprintService.handleNewValue(profile);\r\n      this.profilesService.manageProfile(profile).subscribe((response) => {\r\n        console.log('add profile response', response);\r\n        if (response.statusCode == 0) {\r\n          this.router.navigateByUrl(this.urlRoute);\r\n        }\r\n      });\r\n    }\r\n\r\n    console.log('Profile', profile);\r\n    console.log('Source list', this.sourceList);\r\n    console.log('Target list', this.targetList);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.getSubscription?.unsubscribe();\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ProfilesService } from '../../services/profiles.service';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { Profile } from '../../models/profile.model';\r\nimport { TableModel } from 'src/app/shared/models/table.model';\r\nimport { PrivilegesService } from 'src/app/shared/services/privileges-service/privileges.service';\r\nimport { PRIVILEGES } from 'src/app/shared/statics/privileges';\r\n\r\n@Component({\r\n  selector: 'app-profiles-list',\r\n  templateUrl: './profiles-list.component.html',\r\n  styleUrls: ['./profiles-list.component.scss'],\r\n})\r\nexport class ProfilesListComponent implements OnInit, OnDestroy {\r\n  profilesTable = new TableModel();\r\n  profilesList: Profile[] = [];\r\n  headers = [{ fieldId: 'name', title: 'Profile' }];\r\n\r\n  extraCols = [\r\n    { fieldId: 'lockFlag', title: 'Actions', show: true },\r\n    { fieldId: 'search', title: 'search', show: true },\r\n  ];\r\n  listSubscription!: Subscription;\r\n  enableDelete!: boolean;\r\n  enableUpdate!: boolean;\r\n  viewDetails!: boolean;\r\n  constructor(\r\n    private profilesService: ProfilesService,\r\n    private router: Router,\r\n    private privilegesService:PrivilegesService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.enableUpdate = this.privilegesService.checkPrivileges(\r\n      PRIVILEGES.PROFILES_MANAGMENT.UPDATE\r\n    );\r\n    this.enableDelete = this.privilegesService.checkPrivileges(\r\n      PRIVILEGES.PROFILES_MANAGMENT.DELETE\r\n    );\r\n    this.viewDetails = this.privilegesService.checkPrivileges(\r\n      PRIVILEGES.PROFILES_MANAGMENT.GET_BY_ID\r\n    );\r\n    this.profilesService.showSubject.next(this.router.url.includes('list'));\r\n    this.listSubscription = this.profilesService\r\n      .getProfilesList()\r\n      .subscribe((response: any) => {\r\n        console.log('ProfilesList', response['payload']['profilesList']);\r\n        this.profilesList = response['payload']['profilesList'];\r\n        this.fillTable();\r\n      });\r\n  }\r\n\r\n  fillTable() {\r\n    this.profilesTable.cols = this.headers;\r\n    this.profilesTable.extracols = this.extraCols;\r\n    this.profilesTable.pagination = true;\r\n    this.profilesTable.lockFlag = true;\r\n    this.profilesTable.editFlag = true;\r\n    this.profilesTable.deleteFlag = true;\r\n    this.profilesTable.name = 'profiles';\r\n    this.profilesTable.globalFilterFields = ['name'];\r\n    this.profilesTable.data = this.profilesList;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.listSubscription?.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"mt-3\">\n  <app-table [table]=\"profilesTable\" [enableDelete]=\"enableDelete\"\n  [enableUpdate]=\"enableUpdate\" [viewDetails]=\"viewDetails\"></app-table>\n</div>\n","<div class=\"layout-margin\">\r\n  <div class=\"page-header\">\r\n    <div class=\"page-title\">\r\n      <span class=\"icon-profiles head-icon\"></span>\r\n      <span class=\"head-font\"> Profiles Management</span>\r\n    </div>\r\n    <div class=\"page-action\" *ngIf=\"showBtn\">\r\n      <button\r\n        *ngIf=\"enableAdd\"\r\n        pButton\r\n        pRipple\r\n        type=\"button\"\r\n        label=\"+ Add New Profile\"\r\n        class=\"p-button-danger p-button-text white-button\"\r\n        (click)=\"addProfile()\"\r\n      ></button>\r\n    </div>\r\n  </div>\r\n  <div class=\"router-content\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PrivilegesGuard } from '../authentication/guards/privileges.guard';\nimport { PRIVILEGES } from '../shared/statics/privileges';\nimport { AddProfileComponent } from './components/add-profile/add-profile.component';\nimport { ProfilesListComponent } from './components/profiles-list/profiles-list.component';\nimport { ProfilesManagementComponent } from './layouts/profiles-management/profiles-management.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilesManagementComponent,\n    children: [\n      { path: '', redirectTo: 'list', pathMatch: 'full' },\n      { path: 'list', component: ProfilesListComponent },\n      {\n        path: 'add',\n        component: AddProfileComponent,\n        canActivate: [PrivilegesGuard],\n        data: { privilege: PRIVILEGES.PROFILES_MANAGMENT.ADD },\n      },\n      {\n        path: 'edit/:id',\n        component: AddProfileComponent,\n        canActivate: [PrivilegesGuard],\n        data: { privilege: PRIVILEGES.PROFILES_MANAGMENT.UPDATE },\n      },\n      {\n        path: 'view/:id',\n        component: AddProfileComponent,\n        canActivate: [PrivilegesGuard],\n        data: { privilege: PRIVILEGES.PROFILES_MANAGMENT.GET_BY_ID },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilesRoutingModule {}\n","import { ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { PrivilegesService } from 'src/app/shared/services/privileges-service/privileges.service';\r\nimport { PRIVILEGES } from 'src/app/shared/statics/privileges';\r\nimport { ProfilesService } from '../../services/profiles.service';\r\n\r\n@Component({\r\n  selector: 'app-profiles-management',\r\n  templateUrl: './profiles-management.component.html',\r\n  styleUrls: ['./profiles-management.component.scss'],\r\n})\r\nexport class ProfilesManagementComponent implements OnInit,OnDestroy {\r\n  showSubscription!: Subscription;\r\n  enableAdd!: boolean;\r\n  constructor(\r\n    private router: Router,\r\n    private profilesService: ProfilesService,\r\n    private cdr: ChangeDetectorRef,\r\n    private privilegesService:PrivilegesService\r\n  ) {}\r\n  showBtn!: boolean;\r\n  ngOnInit(): void {\r\n    this.enableAdd = this.privilegesService.checkPrivileges(\r\n      PRIVILEGES.PROFILES_MANAGMENT.ADD\r\n    );\r\n   this.showSubscription = this.profilesService.showSubject.subscribe((flag: boolean) => {\r\n      this.showBtn = flag;\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  addProfile() {\r\n    this.router.navigateByUrl('daily/profiles/add');\r\n    this.showBtn = false;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.showSubscription?.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProfilesRoutingModule } from './profiles-routing.module';\nimport { ProfilesManagementComponent } from './layouts/profiles-management/profiles-management.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { ProfilesListComponent } from './components/profiles-list/profiles-list.component';\nimport { AddProfileComponent } from './components/add-profile/add-profile.component';\n\n\n@NgModule({\n  declarations: [\n    ProfilesManagementComponent,\n    ProfilesListComponent,\n    AddProfileComponent\n  ],\n  imports: [\n    CommonModule,\n    ProfilesRoutingModule,\n    SharedModule\n  ]\n})\nexport class ProfilesModule { }\n"]}